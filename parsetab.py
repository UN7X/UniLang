
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftOR_OPORleftAND_OPANDnonassocEQNEQnonassocLTLEGTGEleftPLUSMINUSleftTIMESDIVIDEMODrightNOTUMINUSAND AND_OP COMMA DECREMENT DEFINE DIVIDE DOT ELSE EQ EQUALS FALSE FOR F_QUOTE GE GT IDENTIFIER IF IMPORT IN INCREMENT LBRACE LE LPAREN LT MINUS MINUS_EQUALS MOD NEQ NOT NUMBER OR OR_OP PLUS PLUS_EQUALS PRINT QUOTE RANGE RBRACE RESULT RPAREN STRING STRING_CONTENT TIMES TRUE WAIT WHILEprogram : statement_liststatement_list : statement_list statement\n                      | statement\n    statement : assignment\n                 | print_statement\n                 | if_statement\n                 | while_statement\n                 | function_def\n                 | for_loop\n                 | return_statement\n                 | wait_statement\n                 | block\n                 | expression_statement\n    expression_statement : expressionexpression : expression INCREMENT\n                  | expression DECREMENT\n    expression : IDENTIFIER PLUS_EQUALS expression\n                  | IDENTIFIER MINUS_EQUALS expression\n    assignment : IDENTIFIER EQUALS expressionprint_statement : PRINT LPAREN expression RPAREN\n    if_statement : IF expression block\n                 | IF expression block ELSE block\n    for_loop : FOR IDENTIFIER IN expression blockiterable : expression\n                | RANGE LPAREN expression COMMA expression RPAREN\n    while_statement : WHILE expression blockfunction_def : DEFINE IDENTIFIER LPAREN RPAREN block\n                    | DEFINE IDENTIFIER LPAREN param_list RPAREN block\n    param_list : IDENTIFIER\n                  | param_list COMMA IDENTIFIER\n                  | empty\n    statement : IMPORT IDENTIFIERreturn_statement : RESULT expressionexpression : fstring\n                  | logic_exprfstring : F_QUOTE fstring_content QUOTEfstring_content : fstring_content fstring_part\n                       | fstring_partfstring_part : STRING_CONTENT\n                    | LBRACE expression RBRACElogic_expr : logic_expr OR_OP logic_term\n                  | logic_term OR logic_term\n                  | logic_term\n    logic_term : logic_term AND_OP equality_expr\n                  | logic_term AND equality_expr\n                  | equality_expr\n    equality_expr : equality_expr EQ relational_expr\n                     | equality_expr NEQ relational_expr\n                     | relational_expr\n    relational_expr : relational_expr LT additive_expr\n                       | relational_expr LE additive_expr\n                       | relational_expr GT additive_expr\n                       | relational_expr GE additive_expr\n                       | additive_expr\n    additive_expr : additive_expr PLUS term\n                     | additive_expr MINUS term\n                     | term\n    term : term TIMES factor\n            | term DIVIDE factor\n            | term MOD factor\n            | factor\n    factor : PLUS factor\n              | MINUS factor %prec UMINUS\n              | NOT factor\n              | primary\n    primary : atom member_access_chainatom : IDENTIFIER\n            | NUMBER\n            | STRING\n            | TRUE\n            | FALSE\n            | LPAREN expression RPARENmember_access_chain : member_access_chain member_access\n                           | emptymember_access : DOT IDENTIFIER\n                     | DOT IDENTIFIER LPAREN arg_list RPAREN\n                     | DOT IDENTIFIER LPAREN RPARENwait_statement : WAIT expressionfunction_call : IDENTIFIER LPAREN arg_list RPAREN\n                     | IDENTIFIER LPAREN RPARENarg_list : expression\n                | arg_list COMMA expression\n                | empty\n    block : LBRACE RBRACE\n             | LBRACE statement_list RBRACEempty :'
    
_lr_action_items = {'IMPORT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,29,30,31,32,34,36,38,39,40,41,42,43,44,45,49,50,53,58,59,60,61,78,79,83,84,85,86,87,88,89,91,92,93,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,132,135,138,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,14,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,-15,-16,-67,-33,-78,-84,14,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,-28,-77,-76,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,125,126,127,129,130,131,132,135,138,139,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,45,-67,-14,53,53,53,56,57,53,53,15,-34,-35,-43,-46,-49,-54,79,-57,79,-61,79,-65,-86,-68,-69,-70,-71,-2,-32,53,53,53,-15,-16,53,-67,-33,-78,-84,15,79,53,79,79,79,79,79,79,79,79,79,79,79,-62,-67,79,79,79,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,119,53,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,125,-20,-75,-22,-27,133,-23,53,-28,-77,-76,53,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,29,30,31,32,34,36,38,39,40,41,42,43,44,45,49,50,53,58,59,60,61,78,79,83,84,85,86,87,88,89,91,92,93,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,132,135,138,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,17,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,-15,-16,-67,-33,-78,-84,17,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,-28,-77,-76,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,29,30,31,32,34,36,38,39,40,41,42,43,44,45,49,50,53,58,59,60,61,78,79,83,84,85,86,87,88,89,91,92,93,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,132,135,138,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,19,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,-15,-16,-67,-33,-78,-84,19,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,-28,-77,-76,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,29,30,31,32,34,36,38,39,40,41,42,43,44,45,49,50,53,58,59,60,61,78,79,83,84,85,86,87,88,89,91,92,93,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,132,135,138,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,20,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,-15,-16,-67,-33,-78,-84,20,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,-28,-77,-76,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,29,30,31,32,34,36,38,39,40,41,42,43,44,45,49,50,53,58,59,60,61,78,79,83,84,85,86,87,88,89,91,92,93,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,132,135,138,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,21,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,-15,-16,-67,-33,-78,-84,21,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,-28,-77,-76,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,29,30,31,32,34,36,38,39,40,41,42,43,44,45,49,50,53,58,59,60,61,78,79,83,84,85,86,87,88,89,91,92,93,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,132,135,138,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,22,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,-15,-16,-67,-33,-78,-84,22,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,-28,-77,-76,]),'RESULT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,29,30,31,32,34,36,38,39,40,41,42,43,44,45,49,50,53,58,59,60,61,78,79,83,84,85,86,87,88,89,91,92,93,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,132,135,138,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,23,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,-15,-16,-67,-33,-78,-84,23,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,-28,-77,-76,]),'WAIT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,29,30,31,32,34,36,38,39,40,41,42,43,44,45,49,50,53,58,59,60,61,78,79,83,84,85,86,87,88,89,91,92,93,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,132,135,138,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,24,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,-15,-16,-67,-33,-78,-84,24,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,-28,-77,-76,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,28,29,30,31,32,34,36,38,39,40,41,42,43,44,45,49,50,53,54,55,58,59,60,61,63,64,65,78,79,83,84,85,86,87,88,89,91,92,93,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,120,123,124,125,126,127,128,130,132,135,138,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,25,-34,-35,66,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,-15,-16,-67,25,25,-33,-78,-84,25,66,-38,-39,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,-85,-41,-36,-37,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,25,25,25,-40,-75,-22,-27,25,-23,-28,-77,-76,]),'F_QUOTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,29,30,31,32,34,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,58,59,60,61,66,78,79,83,84,85,86,87,88,89,91,92,93,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,131,132,135,138,139,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,28,28,28,28,28,28,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,28,28,28,-15,-16,28,-67,-33,-78,-84,28,28,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,28,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,28,-28,-77,-76,28,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,131,132,135,138,139,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,33,33,33,33,33,33,-34,-35,-43,-46,-49,76,33,-57,33,-61,33,-65,-86,-68,-69,-70,-71,-2,-32,33,33,33,-15,-16,33,-67,-33,-78,-84,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-62,-67,33,33,33,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,33,-85,-41,-36,-42,-44,-45,-47,-48,76,76,76,76,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,33,-28,-77,-76,33,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,131,132,135,138,139,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,35,35,35,35,35,35,-34,-35,-43,-46,-49,77,35,-57,35,-61,35,-65,-86,-68,-69,-70,-71,-2,-32,35,35,35,-15,-16,35,-67,-33,-78,-84,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-62,-67,35,35,35,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,35,-85,-41,-36,-42,-44,-45,-47,-48,77,77,77,77,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,35,-28,-77,-76,35,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,131,132,135,138,139,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,37,37,37,37,37,37,-34,-35,-43,-46,-49,-54,37,-57,37,-61,37,-65,-86,-68,-69,-70,-71,-2,-32,37,37,37,-15,-16,37,-67,-33,-78,-84,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-62,-67,37,37,37,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,37,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,37,-28,-77,-76,37,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,131,132,135,138,139,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,40,40,40,40,40,40,-34,-35,-43,-46,-49,-54,40,-57,40,-61,40,-65,-86,-68,-69,-70,-71,-2,-32,40,40,40,-15,-16,40,-67,-33,-78,-84,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-62,-67,40,40,40,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,40,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,40,-28,-77,-76,40,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,131,132,135,138,139,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,41,41,41,41,41,41,-34,-35,-43,-46,-49,-54,41,-57,41,-61,41,-65,-86,-68,-69,-70,-71,-2,-32,41,41,41,-15,-16,41,-67,-33,-78,-84,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-62,-67,41,41,41,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,41,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,41,-28,-77,-76,41,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,131,132,135,138,139,],[42,42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,42,42,42,42,42,42,-34,-35,-43,-46,-49,-54,42,-57,42,-61,42,-65,-86,-68,-69,-70,-71,-2,-32,42,42,42,-15,-16,42,-67,-33,-78,-84,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-62,-67,42,42,42,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,42,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,42,-28,-77,-76,42,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,131,132,135,138,139,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,43,43,43,43,43,43,-34,-35,-43,-46,-49,-54,43,-57,43,-61,43,-65,-86,-68,-69,-70,-71,-2,-32,43,43,43,-15,-16,43,-67,-33,-78,-84,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-62,-67,43,43,43,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,43,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,43,-28,-77,-76,43,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,56,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,131,132,135,138,139,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,51,18,18,18,18,18,18,-34,-35,-43,-46,-49,-54,18,-57,18,-61,18,-65,-86,-68,-69,-70,-71,-2,-32,18,18,18,-15,-16,18,-67,94,-33,-78,-84,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-62,-67,18,18,18,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,18,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,131,-22,-27,-23,18,-28,-77,-76,18,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,26,27,29,30,31,32,34,36,38,39,40,41,42,43,44,45,49,50,53,58,59,60,78,79,83,84,85,86,87,88,89,91,92,93,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,132,135,138,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,-15,-16,-67,-33,-78,-84,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,-85,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,-28,-77,-76,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,29,30,31,32,34,36,38,39,40,41,42,43,44,45,49,50,53,58,59,60,61,78,79,83,84,85,86,87,88,89,91,92,93,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,125,126,127,130,132,135,138,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,60,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-2,-32,-15,-16,-67,-33,-78,-84,96,-62,-67,-63,-64,-66,-74,-19,-17,-18,-72,-21,-26,-85,-41,-36,124,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-20,-75,-22,-27,-23,-28,-77,-76,]),'EQUALS':([15,],[46,]),'PLUS_EQUALS':([15,53,],[47,47,]),'MINUS_EQUALS':([15,53,],[48,48,]),'DOT':([15,39,40,41,42,43,53,79,85,86,91,115,125,135,138,],[-67,-86,-68,-69,-70,-71,-67,-67,116,-74,-72,-73,-75,-77,-76,]),'TIMES':([15,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,110,111,112,113,114,115,125,135,138,],[-67,80,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,80,80,-58,-59,-60,-73,-75,-77,-76,]),'DIVIDE':([15,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,110,111,112,113,114,115,125,135,138,],[-67,81,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,81,81,-58,-59,-60,-73,-75,-77,-76,]),'MOD':([15,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,110,111,112,113,114,115,125,135,138,],[-67,82,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,82,82,-58,-59,-60,-73,-75,-77,-76,]),'LT':([15,31,32,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,104,105,106,107,108,109,110,111,112,113,114,115,125,135,138,],[-67,72,-54,-57,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,72,72,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-75,-77,-76,]),'LE':([15,31,32,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,104,105,106,107,108,109,110,111,112,113,114,115,125,135,138,],[-67,73,-54,-57,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,73,73,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-75,-77,-76,]),'GT':([15,31,32,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,104,105,106,107,108,109,110,111,112,113,114,115,125,135,138,],[-67,74,-54,-57,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,74,74,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-75,-77,-76,]),'GE':([15,31,32,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,104,105,106,107,108,109,110,111,112,113,114,115,125,135,138,],[-67,75,-54,-57,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,75,75,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-75,-77,-76,]),'EQ':([15,30,31,32,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,102,103,104,105,106,107,108,109,110,111,112,113,114,115,125,135,138,],[-67,70,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,70,70,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-75,-77,-76,]),'NEQ':([15,30,31,32,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,102,103,104,105,106,107,108,109,110,111,112,113,114,115,125,135,138,],[-67,71,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,71,71,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-75,-77,-76,]),'OR':([15,29,30,31,32,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,102,103,104,105,106,107,108,109,110,111,112,113,114,115,125,135,138,],[-67,67,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-75,-77,-76,]),'AND_OP':([15,29,30,31,32,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,97,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,125,135,138,],[-67,68,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,68,68,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-75,-77,-76,]),'AND':([15,29,30,31,32,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,97,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,125,135,138,],[-67,69,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,69,69,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-75,-77,-76,]),'OR_OP':([15,27,29,30,31,32,34,36,38,39,40,41,42,43,53,78,79,83,84,85,86,91,97,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,125,135,138,],[-67,62,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-67,-62,-67,-63,-64,-66,-74,-72,-41,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-75,-77,-76,]),'INCREMENT':([15,16,26,27,29,30,31,32,34,36,38,39,40,41,42,43,49,50,52,53,54,55,58,59,78,79,83,84,85,86,87,88,89,90,91,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,123,125,135,136,138,140,],[-67,49,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-15,-16,49,-67,49,49,49,49,-62,-67,-63,-64,-66,-74,49,49,49,49,-72,-41,-36,49,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,49,-75,-77,49,-76,49,]),'DECREMENT':([15,16,26,27,29,30,31,32,34,36,38,39,40,41,42,43,49,50,52,53,54,55,58,59,78,79,83,84,85,86,87,88,89,90,91,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,123,125,135,136,138,140,],[-67,50,-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-15,-16,50,-67,50,50,50,50,-62,-67,-63,-64,-66,-74,50,50,50,50,-72,-41,-36,50,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,50,-75,-77,50,-76,50,]),'RPAREN':([26,27,29,30,31,32,34,36,38,39,40,41,42,43,49,50,52,53,78,79,83,84,85,86,88,89,90,91,94,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,121,122,125,131,133,134,135,136,137,138,140,],[-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-15,-16,91,-67,-62,-67,-63,-64,-66,-74,-17,-18,117,-72,120,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-29,128,-31,-75,135,-30,138,-77,-81,-83,-76,-82,]),'COMMA':([26,27,29,30,31,32,34,36,38,39,40,41,42,43,49,50,53,78,79,83,84,85,86,88,89,91,94,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,121,122,125,131,133,134,135,136,137,138,140,],[-34,-35,-43,-46,-49,-54,-57,-61,-65,-86,-68,-69,-70,-71,-15,-16,-67,-62,-67,-63,-64,-66,-74,-17,-18,-72,-86,-41,-36,-42,-44,-45,-47,-48,-50,-51,-52,-53,-55,-56,-58,-59,-60,-73,-29,129,-31,-75,-86,-30,139,-77,-81,-83,-76,-82,]),'STRING_CONTENT':([28,63,64,65,99,124,],[65,65,-38,-39,-37,-40,]),'IN':([57,],[95,]),'ELSE':([60,92,96,],[-84,118,-85,]),'QUOTE':([63,64,65,99,124,],[98,-38,-39,-37,-40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,25,],[2,61,]),'statement':([0,2,25,61,],[3,44,3,44,]),'assignment':([0,2,25,61,],[4,4,4,4,]),'print_statement':([0,2,25,61,],[5,5,5,5,]),'if_statement':([0,2,25,61,],[6,6,6,6,]),'while_statement':([0,2,25,61,],[7,7,7,7,]),'function_def':([0,2,25,61,],[8,8,8,8,]),'for_loop':([0,2,25,61,],[9,9,9,9,]),'return_statement':([0,2,25,61,],[10,10,10,10,]),'wait_statement':([0,2,25,61,],[11,11,11,11,]),'block':([0,2,25,54,55,61,118,120,123,128,],[12,12,12,92,93,12,126,127,130,132,]),'expression_statement':([0,2,25,61,],[13,13,13,13,]),'expression':([0,2,18,19,20,23,24,25,46,47,48,51,61,66,95,131,139,],[16,16,52,54,55,58,59,16,87,88,89,90,16,100,123,136,140,]),'fstring':([0,2,18,19,20,23,24,25,46,47,48,51,61,66,95,131,139,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'logic_expr':([0,2,18,19,20,23,24,25,46,47,48,51,61,66,95,131,139,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'logic_term':([0,2,18,19,20,23,24,25,46,47,48,51,61,62,66,67,95,131,139,],[29,29,29,29,29,29,29,29,29,29,29,29,29,97,29,101,29,29,29,]),'equality_expr':([0,2,18,19,20,23,24,25,46,47,48,51,61,62,66,67,68,69,95,131,139,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,102,103,30,30,30,]),'relational_expr':([0,2,18,19,20,23,24,25,46,47,48,51,61,62,66,67,68,69,70,71,95,131,139,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,104,105,31,31,31,]),'additive_expr':([0,2,18,19,20,23,24,25,46,47,48,51,61,62,66,67,68,69,70,71,72,73,74,75,95,131,139,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,107,108,109,32,32,32,]),'term':([0,2,18,19,20,23,24,25,46,47,48,51,61,62,66,67,68,69,70,71,72,73,74,75,76,77,95,131,139,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,110,111,34,34,34,]),'factor':([0,2,18,19,20,23,24,25,33,35,37,46,47,48,51,61,62,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,95,131,139,],[36,36,36,36,36,36,36,36,78,83,84,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,112,113,114,36,36,36,]),'primary':([0,2,18,19,20,23,24,25,33,35,37,46,47,48,51,61,62,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,95,131,139,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'atom':([0,2,18,19,20,23,24,25,33,35,37,46,47,48,51,61,62,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,95,131,139,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'fstring_content':([28,],[63,]),'fstring_part':([28,63,],[64,99,]),'member_access_chain':([39,],[85,]),'empty':([39,94,131,],[86,122,137,]),'member_access':([85,],[115,]),'param_list':([94,],[121,]),'arg_list':([131,],[134,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','interpreter.py',293),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','interpreter.py',297),
  ('statement_list -> statement','statement_list',1,'p_statement_list','interpreter.py',298),
  ('statement -> assignment','statement',1,'p_statement','interpreter.py',306),
  ('statement -> print_statement','statement',1,'p_statement','interpreter.py',307),
  ('statement -> if_statement','statement',1,'p_statement','interpreter.py',308),
  ('statement -> while_statement','statement',1,'p_statement','interpreter.py',309),
  ('statement -> function_def','statement',1,'p_statement','interpreter.py',310),
  ('statement -> for_loop','statement',1,'p_statement','interpreter.py',311),
  ('statement -> return_statement','statement',1,'p_statement','interpreter.py',312),
  ('statement -> wait_statement','statement',1,'p_statement','interpreter.py',313),
  ('statement -> block','statement',1,'p_statement','interpreter.py',314),
  ('statement -> expression_statement','statement',1,'p_statement','interpreter.py',315),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','interpreter.py',320),
  ('expression -> expression INCREMENT','expression',2,'p_expression_increment','interpreter.py',324),
  ('expression -> expression DECREMENT','expression',2,'p_expression_increment','interpreter.py',325),
  ('expression -> IDENTIFIER PLUS_EQUALS expression','expression',3,'p_expression_compound_assignment','interpreter.py',333),
  ('expression -> IDENTIFIER MINUS_EQUALS expression','expression',3,'p_expression_compound_assignment','interpreter.py',334),
  ('assignment -> IDENTIFIER EQUALS expression','assignment',3,'p_assignment','interpreter.py',343),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','interpreter.py',347),
  ('if_statement -> IF expression block','if_statement',3,'p_if_statement','interpreter.py',352),
  ('if_statement -> IF expression block ELSE block','if_statement',5,'p_if_statement','interpreter.py',353),
  ('for_loop -> FOR IDENTIFIER IN expression block','for_loop',5,'p_for_loop','interpreter.py',361),
  ('iterable -> expression','iterable',1,'p_iterable','interpreter.py',365),
  ('iterable -> RANGE LPAREN expression COMMA expression RPAREN','iterable',6,'p_iterable','interpreter.py',366),
  ('while_statement -> WHILE expression block','while_statement',3,'p_while_statement','interpreter.py',374),
  ('function_def -> DEFINE IDENTIFIER LPAREN RPAREN block','function_def',5,'p_function_def','interpreter.py',378),
  ('function_def -> DEFINE IDENTIFIER LPAREN param_list RPAREN block','function_def',6,'p_function_def','interpreter.py',379),
  ('param_list -> IDENTIFIER','param_list',1,'p_param_list','interpreter.py',387),
  ('param_list -> param_list COMMA IDENTIFIER','param_list',3,'p_param_list','interpreter.py',388),
  ('param_list -> empty','param_list',1,'p_param_list','interpreter.py',389),
  ('statement -> IMPORT IDENTIFIER','statement',2,'p_import_statement','interpreter.py',399),
  ('return_statement -> RESULT expression','return_statement',2,'p_return_statement','interpreter.py',403),
  ('expression -> fstring','expression',1,'p_expression','interpreter.py',407),
  ('expression -> logic_expr','expression',1,'p_expression','interpreter.py',408),
  ('fstring -> F_QUOTE fstring_content QUOTE','fstring',3,'p_fstring','interpreter.py',412),
  ('fstring_content -> fstring_content fstring_part','fstring_content',2,'p_fstring_content','interpreter.py',416),
  ('fstring_content -> fstring_part','fstring_content',1,'p_fstring_content','interpreter.py',417),
  ('fstring_part -> STRING_CONTENT','fstring_part',1,'p_fstring_part','interpreter.py',424),
  ('fstring_part -> LBRACE expression RBRACE','fstring_part',3,'p_fstring_part','interpreter.py',425),
  ('logic_expr -> logic_expr OR_OP logic_term','logic_expr',3,'p_logic_expr','interpreter.py',432),
  ('logic_expr -> logic_term OR logic_term','logic_expr',3,'p_logic_expr','interpreter.py',433),
  ('logic_expr -> logic_term','logic_expr',1,'p_logic_expr','interpreter.py',434),
  ('logic_term -> logic_term AND_OP equality_expr','logic_term',3,'p_logic_term','interpreter.py',442),
  ('logic_term -> logic_term AND equality_expr','logic_term',3,'p_logic_term','interpreter.py',443),
  ('logic_term -> equality_expr','logic_term',1,'p_logic_term','interpreter.py',444),
  ('equality_expr -> equality_expr EQ relational_expr','equality_expr',3,'p_equality_expr','interpreter.py',452),
  ('equality_expr -> equality_expr NEQ relational_expr','equality_expr',3,'p_equality_expr','interpreter.py',453),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr','interpreter.py',454),
  ('relational_expr -> relational_expr LT additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',462),
  ('relational_expr -> relational_expr LE additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',463),
  ('relational_expr -> relational_expr GT additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',464),
  ('relational_expr -> relational_expr GE additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',465),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr','interpreter.py',466),
  ('additive_expr -> additive_expr PLUS term','additive_expr',3,'p_additive_expr','interpreter.py',474),
  ('additive_expr -> additive_expr MINUS term','additive_expr',3,'p_additive_expr','interpreter.py',475),
  ('additive_expr -> term','additive_expr',1,'p_additive_expr','interpreter.py',476),
  ('term -> term TIMES factor','term',3,'p_term','interpreter.py',484),
  ('term -> term DIVIDE factor','term',3,'p_term','interpreter.py',485),
  ('term -> term MOD factor','term',3,'p_term','interpreter.py',486),
  ('term -> factor','term',1,'p_term','interpreter.py',487),
  ('factor -> PLUS factor','factor',2,'p_factor','interpreter.py',495),
  ('factor -> MINUS factor','factor',2,'p_factor','interpreter.py',496),
  ('factor -> NOT factor','factor',2,'p_factor','interpreter.py',497),
  ('factor -> primary','factor',1,'p_factor','interpreter.py',498),
  ('primary -> atom member_access_chain','primary',2,'p_primary','interpreter.py',506),
  ('atom -> IDENTIFIER','atom',1,'p_atom','interpreter.py',513),
  ('atom -> NUMBER','atom',1,'p_atom','interpreter.py',514),
  ('atom -> STRING','atom',1,'p_atom','interpreter.py',515),
  ('atom -> TRUE','atom',1,'p_atom','interpreter.py',516),
  ('atom -> FALSE','atom',1,'p_atom','interpreter.py',517),
  ('atom -> LPAREN expression RPAREN','atom',3,'p_atom','interpreter.py',518),
  ('member_access_chain -> member_access_chain member_access','member_access_chain',2,'p_member_access_chain','interpreter.py',534),
  ('member_access_chain -> empty','member_access_chain',1,'p_member_access_chain','interpreter.py',535),
  ('member_access -> DOT IDENTIFIER','member_access',2,'p_member_access','interpreter.py',542),
  ('member_access -> DOT IDENTIFIER LPAREN arg_list RPAREN','member_access',5,'p_member_access','interpreter.py',543),
  ('member_access -> DOT IDENTIFIER LPAREN RPAREN','member_access',4,'p_member_access','interpreter.py',544),
  ('wait_statement -> WAIT expression','wait_statement',2,'p_wait_statement','interpreter.py',558),
  ('function_call -> IDENTIFIER LPAREN arg_list RPAREN','function_call',4,'p_function_call','interpreter.py',562),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','interpreter.py',563),
  ('arg_list -> expression','arg_list',1,'p_arg_list','interpreter.py',568),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','interpreter.py',569),
  ('arg_list -> empty','arg_list',1,'p_arg_list','interpreter.py',570),
  ('block -> LBRACE RBRACE','block',2,'p_block','interpreter.py',580),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','interpreter.py',581),
  ('empty -> <empty>','empty',0,'p_empty','interpreter.py',588),
]
