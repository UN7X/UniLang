
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftORleftANDnonassocEQNEQnonassocLTLEGTGEleftPLUSMINUSleftTIMESDIVIDEMODrightNOTUMINUSAND BREAK COMMA DECREMENT DEFINE DIVIDE DOT ELSE EQ EQUALS FALSE FOR GE GT IDENTIFIER IF IMPORT IN INCREMENT LBRACE LBRACKET LE LPAREN LT MINUS MINUS_EQUALS MOD NEQ NOT NUMBER OR PLUS PLUS_EQUALS PRINT RANGE RBRACE RBRACKET RESULT RPAREN STRING TIMES TRUE WAIT WHILEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : assignment\n                 | print_statement\n                 | if_statement\n                 | while_statement\n                 | function_def\n                 | for_loop\n                 | return_statement\n                 | wait_statement\n                 | block\n                 | expression_statement\n                 | import_statement\n                 | BREAKblock : LBRACE statement_list RBRACE\n             | LBRACE RBRACEexpression_statement : expressionassignment : IDENTIFIER EQUALS expressionprint_statement : PRINT LPAREN expression RPARENif_statement : IF expression block\n                    | IF expression block ELSE blockfor_loop : FOR IDENTIFIER IN iterable blockiterable : expression\n                | RANGE LPAREN expression COMMA expression RPARENwhile_statement : WHILE expression blockfunction_def : DEFINE IDENTIFIER LPAREN RPAREN block\n                    | DEFINE IDENTIFIER LPAREN param_list RPAREN blockparam_list : IDENTIFIER\n                  | param_list COMMA IDENTIFIER\n                  | emptyimport_statement : IMPORT IDENTIFIERreturn_statement : RESULT expressionwait_statement : WAIT expressionexpression : logic_or_exprlogic_or_expr : logic_or_expr OR logic_and_expr\n                     | logic_and_exprlogic_and_expr : logic_and_expr AND equality_expr\n                      | equality_exprequality_expr : relational_expr\n                     | equality_expr EQ relational_expr\n                     | equality_expr NEQ relational_exprrelational_expr : additive_expr\n                       | relational_expr LT additive_expr\n                       | relational_expr GT additive_expr\n                       | relational_expr LE additive_expr\n                       | relational_expr GE additive_expradditive_expr : additive_expr PLUS term\n                     | additive_expr MINUS term\n                     | termterm : term TIMES factor\n            | term DIVIDE factor\n            | term MOD factor\n            | factorfactor : PLUS factor\n              | MINUS factor %prec UMINUS\n              | NOT factor\n              | primaryprimary : atom\n               | primary DOT IDENTIFIER\n               | primary DOT IDENTIFIER LPAREN arg_list RPAREN\n               | primary DOT IDENTIFIER LPAREN RPAREN\n               | primary LPAREN arg_list RPAREN\n               | primary LPAREN RPARENarg_list : expression\n                | arg_list COMMA expression\n                | emptyatom : IDENTIFIER\n            | NUMBER\n            | STRING\n            | TRUE\n            | FALSE\n            | LPAREN expression RPAREN\n            | list_literallist_literal : LBRACKET item_list RBRACKETitem_list : expression\n                 | item_list COMMA expression\n                 | emptyexpression : expression INCREMENT\n                  | expression DECREMENTexpression : IDENTIFIER PLUS_EQUALS expression\n                  | IDENTIFIER MINUS_EQUALS expressionempty :'
    
_lr_action_items = {'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,59,60,61,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,126,129,130,133,136,138,141,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,15,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,-33,-34,15,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,-63,-22,-27,-23,-62,-28,-61,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,115,116,125,126,127,129,130,132,133,134,136,138,141,142,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,54,54,54,57,58,54,54,16,63,-35,-37,-39,-40,-43,75,-50,75,-54,75,-58,-59,-69,-70,-71,-72,-74,54,-2,54,54,54,-79,-80,54,-68,-33,-34,16,-17,-32,75,75,75,75,75,75,75,75,75,75,-55,-68,75,75,75,-56,-57,109,54,-19,-81,-82,-73,-21,-26,118,54,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,54,-20,54,-63,54,-22,-27,139,-23,54,-62,-28,-61,54,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,59,60,61,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,126,129,130,133,136,138,141,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,18,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,-33,-34,18,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,-63,-22,-27,-23,-62,-28,-61,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,59,60,61,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,126,129,130,133,136,138,141,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,20,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,-33,-34,20,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,-63,-22,-27,-23,-62,-28,-61,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,59,60,61,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,126,129,130,133,136,138,141,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,21,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,-33,-34,21,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,-63,-22,-27,-23,-62,-28,-61,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,59,60,61,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,126,129,130,133,136,138,141,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,22,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,-33,-34,22,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,-63,-22,-27,-23,-62,-28,-61,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,59,60,61,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,126,129,130,133,136,138,141,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,23,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,-33,-34,23,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,-63,-22,-27,-23,-62,-28,-61,]),'RESULT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,59,60,61,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,126,129,130,133,136,138,141,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,24,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,-33,-34,24,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,-63,-22,-27,-23,-62,-28,-61,]),'WAIT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,59,60,61,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,126,129,130,133,136,138,141,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,25,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,-33,-34,25,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,-63,-22,-27,-23,-62,-28,-61,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,55,56,59,60,61,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,117,119,122,123,126,129,130,131,133,136,138,141,144,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,26,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,26,26,-33,-34,26,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,26,26,26,-24,-63,-22,-27,26,-23,-62,-28,-61,-25,]),'IMPORT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,59,60,61,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,126,129,130,133,136,138,141,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,27,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,-33,-34,27,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,-63,-22,-27,-23,-62,-28,-61,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,115,116,125,126,127,129,130,133,134,136,138,141,142,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,33,33,33,33,33,33,-35,-37,-39,-40,72,33,-50,33,-54,33,-58,-59,-69,-70,-71,-72,-74,33,-2,33,33,33,-79,-80,33,-68,-33,-34,33,-17,-32,33,33,33,33,33,33,33,33,33,33,-55,-68,33,33,33,-56,-57,33,-19,-81,-82,-73,-21,-26,33,-16,-36,-38,-41,-42,72,72,72,72,-48,-49,-51,-52,-53,-60,-64,-75,33,-20,33,-63,33,-22,-27,-23,33,-62,-28,-61,33,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,115,116,125,126,127,129,130,133,134,136,138,141,142,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,35,35,35,35,35,35,-35,-37,-39,-40,73,35,-50,35,-54,35,-58,-59,-69,-70,-71,-72,-74,35,-2,35,35,35,-79,-80,35,-68,-33,-34,35,-17,-32,35,35,35,35,35,35,35,35,35,35,-55,-68,35,35,35,-56,-57,35,-19,-81,-82,-73,-21,-26,35,-16,-36,-38,-41,-42,73,73,73,73,-48,-49,-51,-52,-53,-60,-64,-75,35,-20,35,-63,35,-22,-27,-23,35,-62,-28,-61,35,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,115,116,125,126,127,129,130,133,134,136,138,141,142,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,37,37,37,37,37,37,-35,-37,-39,-40,-43,37,-50,37,-54,37,-58,-59,-69,-70,-71,-72,-74,37,-2,37,37,37,-79,-80,37,-68,-33,-34,37,-17,-32,37,37,37,37,37,37,37,37,37,37,-55,-68,37,37,37,-56,-57,37,-19,-81,-82,-73,-21,-26,37,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,37,-20,37,-63,37,-22,-27,-23,37,-62,-28,-61,37,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,115,116,125,126,127,129,130,133,134,136,138,141,142,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,40,40,40,40,40,40,-35,-37,-39,-40,-43,40,-50,40,-54,40,-58,-59,-69,-70,-71,-72,-74,40,-2,40,40,40,-79,-80,40,-68,-33,-34,40,-17,-32,40,40,40,40,40,40,40,40,40,40,-55,-68,40,40,40,-56,-57,40,-19,-81,-82,-73,-21,-26,40,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,40,-20,40,-63,40,-22,-27,-23,40,-62,-28,-61,40,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,115,116,125,126,127,129,130,133,134,136,138,141,142,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,41,41,41,41,41,41,-35,-37,-39,-40,-43,41,-50,41,-54,41,-58,-59,-69,-70,-71,-72,-74,41,-2,41,41,41,-79,-80,41,-68,-33,-34,41,-17,-32,41,41,41,41,41,41,41,41,41,41,-55,-68,41,41,41,-56,-57,41,-19,-81,-82,-73,-21,-26,41,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,41,-20,41,-63,41,-22,-27,-23,41,-62,-28,-61,41,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,115,116,125,126,127,129,130,133,134,136,138,141,142,],[42,42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,42,42,42,42,42,42,-35,-37,-39,-40,-43,42,-50,42,-54,42,-58,-59,-69,-70,-71,-72,-74,42,-2,42,42,42,-79,-80,42,-68,-33,-34,42,-17,-32,42,42,42,42,42,42,42,42,42,42,-55,-68,42,42,42,-56,-57,42,-19,-81,-82,-73,-21,-26,42,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,42,-20,42,-63,42,-22,-27,-23,42,-62,-28,-61,42,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,115,116,125,126,127,129,130,133,134,136,138,141,142,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,43,43,43,43,43,43,-35,-37,-39,-40,-43,43,-50,43,-54,43,-58,-59,-69,-70,-71,-72,-74,43,-2,43,43,43,-79,-80,43,-68,-33,-34,43,-17,-32,43,43,43,43,43,43,43,43,43,43,-55,-68,43,43,43,-56,-57,43,-19,-81,-82,-73,-21,-26,43,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,43,-20,43,-63,43,-22,-27,-23,43,-62,-28,-61,43,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,115,116,124,125,126,127,129,130,133,134,136,138,141,142,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,52,19,19,19,19,19,19,-35,-37,-39,-40,-43,19,-50,19,-54,19,82,-59,-69,-70,-71,-72,-74,19,-2,19,19,19,-79,-80,19,-68,93,-33,-34,19,-17,-32,19,19,19,19,19,19,19,19,19,19,-55,-68,19,19,19,-56,-57,19,-19,-81,-82,-73,-21,-26,19,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,125,-64,-75,19,-20,134,19,-63,19,-22,-27,-23,19,-62,-28,-61,19,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,115,116,125,126,127,129,130,133,134,136,138,141,142,],[45,45,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,45,45,45,45,45,45,-35,-37,-39,-40,-43,45,-50,45,-54,45,-58,-59,-69,-70,-71,-72,-74,45,-2,45,45,45,-79,-80,45,-68,-33,-34,45,-17,-32,45,45,45,45,45,45,45,45,45,45,-55,-68,45,45,45,-56,-57,45,-19,-81,-82,-73,-21,-26,45,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,45,-20,45,-63,45,-22,-27,-23,45,-62,-28,-61,45,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,59,60,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,126,129,130,133,136,138,141,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,-33,-34,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,-63,-22,-27,-23,-62,-28,-61,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,46,50,51,54,59,60,61,62,63,74,75,79,80,86,87,88,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,116,126,129,130,133,136,138,141,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,62,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-2,-79,-80,-68,-33,-34,95,-17,-32,-55,-68,-56,-57,-19,-81,-82,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-20,-63,-22,-27,-23,-62,-28,-61,]),'EQUALS':([16,],[47,]),'PLUS_EQUALS':([16,54,],[48,48,]),'MINUS_EQUALS':([16,54,],[49,49,]),'DOT':([16,38,39,40,41,42,43,44,54,75,90,109,111,114,126,136,141,],[-68,81,-59,-69,-70,-71,-72,-74,-68,-68,-73,-60,-64,-75,-63,-62,-61,]),'TIMES':([16,34,36,38,39,40,41,42,43,44,54,74,75,79,80,90,104,105,106,107,108,109,111,114,126,136,141,],[-68,76,-54,-58,-59,-69,-70,-71,-72,-74,-68,-55,-68,-56,-57,-73,76,76,-51,-52,-53,-60,-64,-75,-63,-62,-61,]),'DIVIDE':([16,34,36,38,39,40,41,42,43,44,54,74,75,79,80,90,104,105,106,107,108,109,111,114,126,136,141,],[-68,77,-54,-58,-59,-69,-70,-71,-72,-74,-68,-55,-68,-56,-57,-73,77,77,-51,-52,-53,-60,-64,-75,-63,-62,-61,]),'MOD':([16,34,36,38,39,40,41,42,43,44,54,74,75,79,80,90,104,105,106,107,108,109,111,114,126,136,141,],[-68,78,-54,-58,-59,-69,-70,-71,-72,-74,-68,-55,-68,-56,-57,-73,78,78,-51,-52,-53,-60,-64,-75,-63,-62,-61,]),'LT':([16,31,32,34,36,38,39,40,41,42,43,44,54,74,75,79,80,90,98,99,100,101,102,103,104,105,106,107,108,109,111,114,126,136,141,],[-68,68,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-68,-55,-68,-56,-57,-73,68,68,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-63,-62,-61,]),'GT':([16,31,32,34,36,38,39,40,41,42,43,44,54,74,75,79,80,90,98,99,100,101,102,103,104,105,106,107,108,109,111,114,126,136,141,],[-68,69,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-68,-55,-68,-56,-57,-73,69,69,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-63,-62,-61,]),'LE':([16,31,32,34,36,38,39,40,41,42,43,44,54,74,75,79,80,90,98,99,100,101,102,103,104,105,106,107,108,109,111,114,126,136,141,],[-68,70,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-68,-55,-68,-56,-57,-73,70,70,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-63,-62,-61,]),'GE':([16,31,32,34,36,38,39,40,41,42,43,44,54,74,75,79,80,90,98,99,100,101,102,103,104,105,106,107,108,109,111,114,126,136,141,],[-68,71,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-68,-55,-68,-56,-57,-73,71,71,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-63,-62,-61,]),'EQ':([16,30,31,32,34,36,38,39,40,41,42,43,44,54,74,75,79,80,90,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,126,136,141,],[-68,66,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-68,-55,-68,-56,-57,-73,66,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-63,-62,-61,]),'NEQ':([16,30,31,32,34,36,38,39,40,41,42,43,44,54,74,75,79,80,90,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,126,136,141,],[-68,67,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-68,-55,-68,-56,-57,-73,67,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-63,-62,-61,]),'AND':([16,29,30,31,32,34,36,38,39,40,41,42,43,44,54,74,75,79,80,90,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,126,136,141,],[-68,65,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-68,-55,-68,-56,-57,-73,65,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-63,-62,-61,]),'OR':([16,28,29,30,31,32,34,36,38,39,40,41,42,43,44,54,74,75,79,80,90,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,126,136,141,],[-68,64,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-68,-55,-68,-56,-57,-73,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-63,-62,-61,]),'INCREMENT':([16,17,28,29,30,31,32,34,36,38,39,40,41,42,43,44,50,51,53,54,55,56,59,60,74,75,79,80,84,86,87,88,89,90,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,123,126,128,136,137,140,141,143,],[-68,50,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-79,-80,50,-68,50,50,50,50,-55,-68,-56,-57,50,50,50,50,50,-73,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,50,-75,50,-63,50,-62,50,50,-61,50,]),'DECREMENT':([16,17,28,29,30,31,32,34,36,38,39,40,41,42,43,44,50,51,53,54,55,56,59,60,74,75,79,80,84,86,87,88,89,90,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,114,123,126,128,136,137,140,141,143,],[-68,51,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-79,-80,51,-68,51,51,51,51,-55,-68,-56,-57,51,51,51,51,51,-73,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,51,-75,51,-63,51,-62,51,51,-61,51,]),'RPAREN':([28,29,30,31,32,34,36,38,39,40,41,42,43,44,50,51,53,54,74,75,79,80,82,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,120,121,125,126,135,136,137,139,141,143,],[-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-79,-80,90,-68,-55,-68,-56,-57,111,-81,-82,116,-73,119,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,126,-64,-65,-67,-75,-29,131,-31,136,-63,141,-62,-66,-30,-61,144,]),'RBRACKET':([28,29,30,31,32,34,36,38,39,40,41,42,43,44,45,50,51,54,74,75,79,80,83,84,85,87,88,90,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,126,128,136,141,],[-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-83,-79,-80,-68,-55,-68,-56,-57,114,-76,-78,-81,-82,-73,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-75,-63,-77,-62,-61,]),'COMMA':([28,29,30,31,32,34,36,38,39,40,41,42,43,44,45,50,51,54,74,75,79,80,82,83,84,85,87,88,90,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,120,121,125,126,128,135,136,137,139,140,141,],[-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-83,-79,-80,-68,-55,-68,-56,-57,-83,115,-76,-78,-81,-82,-73,-83,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,127,-64,-65,-67,-75,-29,132,-31,-83,-63,-77,127,-62,-66,-30,142,-61,]),'IN':([58,],[94,]),'ELSE':([62,91,95,],[-17,117,-16,]),'RANGE':([94,],[124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,26,],[2,61,]),'statement':([0,2,26,61,],[3,46,3,46,]),'assignment':([0,2,26,61,],[4,4,4,4,]),'print_statement':([0,2,26,61,],[5,5,5,5,]),'if_statement':([0,2,26,61,],[6,6,6,6,]),'while_statement':([0,2,26,61,],[7,7,7,7,]),'function_def':([0,2,26,61,],[8,8,8,8,]),'for_loop':([0,2,26,61,],[9,9,9,9,]),'return_statement':([0,2,26,61,],[10,10,10,10,]),'wait_statement':([0,2,26,61,],[11,11,11,11,]),'block':([0,2,26,55,56,61,117,119,122,131,],[12,12,12,91,92,12,129,130,133,138,]),'expression_statement':([0,2,26,61,],[13,13,13,13,]),'import_statement':([0,2,26,61,],[14,14,14,14,]),'expression':([0,2,19,20,21,24,25,26,45,47,48,49,52,61,82,94,115,125,127,134,142,],[17,17,53,55,56,59,60,17,84,86,87,88,89,17,112,123,128,112,137,140,143,]),'logic_or_expr':([0,2,19,20,21,24,25,26,45,47,48,49,52,61,82,94,115,125,127,134,142,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'logic_and_expr':([0,2,19,20,21,24,25,26,45,47,48,49,52,61,64,82,94,115,125,127,134,142,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,96,29,29,29,29,29,29,29,]),'equality_expr':([0,2,19,20,21,24,25,26,45,47,48,49,52,61,64,65,82,94,115,125,127,134,142,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,97,30,30,30,30,30,30,30,]),'relational_expr':([0,2,19,20,21,24,25,26,45,47,48,49,52,61,64,65,66,67,82,94,115,125,127,134,142,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,98,99,31,31,31,31,31,31,31,]),'additive_expr':([0,2,19,20,21,24,25,26,45,47,48,49,52,61,64,65,66,67,68,69,70,71,82,94,115,125,127,134,142,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,101,102,103,32,32,32,32,32,32,32,]),'term':([0,2,19,20,21,24,25,26,45,47,48,49,52,61,64,65,66,67,68,69,70,71,72,73,82,94,115,125,127,134,142,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,104,105,34,34,34,34,34,34,34,]),'factor':([0,2,19,20,21,24,25,26,33,35,37,45,47,48,49,52,61,64,65,66,67,68,69,70,71,72,73,76,77,78,82,94,115,125,127,134,142,],[36,36,36,36,36,36,36,36,74,79,80,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,106,107,108,36,36,36,36,36,36,36,]),'primary':([0,2,19,20,21,24,25,26,33,35,37,45,47,48,49,52,61,64,65,66,67,68,69,70,71,72,73,76,77,78,82,94,115,125,127,134,142,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'atom':([0,2,19,20,21,24,25,26,33,35,37,45,47,48,49,52,61,64,65,66,67,68,69,70,71,72,73,76,77,78,82,94,115,125,127,134,142,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'list_literal':([0,2,19,20,21,24,25,26,33,35,37,45,47,48,49,52,61,64,65,66,67,68,69,70,71,72,73,76,77,78,82,94,115,125,127,134,142,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'item_list':([45,],[83,]),'empty':([45,82,93,125,],[85,113,121,113,]),'arg_list':([82,125,],[110,135,]),'param_list':([93,],[120,]),'iterable':([94,],[122,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','interpreter.py',695),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','interpreter.py',699),
  ('statement_list -> statement','statement_list',1,'p_statement_list','interpreter.py',700),
  ('statement -> assignment','statement',1,'p_statement','interpreter.py',704),
  ('statement -> print_statement','statement',1,'p_statement','interpreter.py',705),
  ('statement -> if_statement','statement',1,'p_statement','interpreter.py',706),
  ('statement -> while_statement','statement',1,'p_statement','interpreter.py',707),
  ('statement -> function_def','statement',1,'p_statement','interpreter.py',708),
  ('statement -> for_loop','statement',1,'p_statement','interpreter.py',709),
  ('statement -> return_statement','statement',1,'p_statement','interpreter.py',710),
  ('statement -> wait_statement','statement',1,'p_statement','interpreter.py',711),
  ('statement -> block','statement',1,'p_statement','interpreter.py',712),
  ('statement -> expression_statement','statement',1,'p_statement','interpreter.py',713),
  ('statement -> import_statement','statement',1,'p_statement','interpreter.py',714),
  ('statement -> BREAK','statement',1,'p_statement','interpreter.py',715),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','interpreter.py',719),
  ('block -> LBRACE RBRACE','block',2,'p_block','interpreter.py',720),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','interpreter.py',724),
  ('assignment -> IDENTIFIER EQUALS expression','assignment',3,'p_assignment','interpreter.py',728),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','interpreter.py',732),
  ('if_statement -> IF expression block','if_statement',3,'p_if_statement','interpreter.py',736),
  ('if_statement -> IF expression block ELSE block','if_statement',5,'p_if_statement','interpreter.py',737),
  ('for_loop -> FOR IDENTIFIER IN iterable block','for_loop',5,'p_for_loop','interpreter.py',741),
  ('iterable -> expression','iterable',1,'p_iterable','interpreter.py',745),
  ('iterable -> RANGE LPAREN expression COMMA expression RPAREN','iterable',6,'p_iterable','interpreter.py',746),
  ('while_statement -> WHILE expression block','while_statement',3,'p_while_statement','interpreter.py',750),
  ('function_def -> DEFINE IDENTIFIER LPAREN RPAREN block','function_def',5,'p_function_def','interpreter.py',754),
  ('function_def -> DEFINE IDENTIFIER LPAREN param_list RPAREN block','function_def',6,'p_function_def','interpreter.py',755),
  ('param_list -> IDENTIFIER','param_list',1,'p_param_list','interpreter.py',762),
  ('param_list -> param_list COMMA IDENTIFIER','param_list',3,'p_param_list','interpreter.py',763),
  ('param_list -> empty','param_list',1,'p_param_list','interpreter.py',764),
  ('import_statement -> IMPORT IDENTIFIER','import_statement',2,'p_import_statement','interpreter.py',773),
  ('return_statement -> RESULT expression','return_statement',2,'p_return_statement','interpreter.py',777),
  ('wait_statement -> WAIT expression','wait_statement',2,'p_wait_statement','interpreter.py',781),
  ('expression -> logic_or_expr','expression',1,'p_expression','interpreter.py',785),
  ('logic_or_expr -> logic_or_expr OR logic_and_expr','logic_or_expr',3,'p_logic_or_expr','interpreter.py',789),
  ('logic_or_expr -> logic_and_expr','logic_or_expr',1,'p_logic_or_expr','interpreter.py',790),
  ('logic_and_expr -> logic_and_expr AND equality_expr','logic_and_expr',3,'p_logic_and_expr','interpreter.py',794),
  ('logic_and_expr -> equality_expr','logic_and_expr',1,'p_logic_and_expr','interpreter.py',795),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr','interpreter.py',799),
  ('equality_expr -> equality_expr EQ relational_expr','equality_expr',3,'p_equality_expr','interpreter.py',800),
  ('equality_expr -> equality_expr NEQ relational_expr','equality_expr',3,'p_equality_expr','interpreter.py',801),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr','interpreter.py',805),
  ('relational_expr -> relational_expr LT additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',806),
  ('relational_expr -> relational_expr GT additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',807),
  ('relational_expr -> relational_expr LE additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',808),
  ('relational_expr -> relational_expr GE additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',809),
  ('additive_expr -> additive_expr PLUS term','additive_expr',3,'p_additive_expr','interpreter.py',813),
  ('additive_expr -> additive_expr MINUS term','additive_expr',3,'p_additive_expr','interpreter.py',814),
  ('additive_expr -> term','additive_expr',1,'p_additive_expr','interpreter.py',815),
  ('term -> term TIMES factor','term',3,'p_term','interpreter.py',819),
  ('term -> term DIVIDE factor','term',3,'p_term','interpreter.py',820),
  ('term -> term MOD factor','term',3,'p_term','interpreter.py',821),
  ('term -> factor','term',1,'p_term','interpreter.py',822),
  ('factor -> PLUS factor','factor',2,'p_factor','interpreter.py',826),
  ('factor -> MINUS factor','factor',2,'p_factor','interpreter.py',827),
  ('factor -> NOT factor','factor',2,'p_factor','interpreter.py',828),
  ('factor -> primary','factor',1,'p_factor','interpreter.py',829),
  ('primary -> atom','primary',1,'p_primary','interpreter.py',833),
  ('primary -> primary DOT IDENTIFIER','primary',3,'p_primary','interpreter.py',834),
  ('primary -> primary DOT IDENTIFIER LPAREN arg_list RPAREN','primary',6,'p_primary','interpreter.py',835),
  ('primary -> primary DOT IDENTIFIER LPAREN RPAREN','primary',5,'p_primary','interpreter.py',836),
  ('primary -> primary LPAREN arg_list RPAREN','primary',4,'p_primary','interpreter.py',837),
  ('primary -> primary LPAREN RPAREN','primary',3,'p_primary','interpreter.py',838),
  ('arg_list -> expression','arg_list',1,'p_arg_list','interpreter.py',861),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','interpreter.py',862),
  ('arg_list -> empty','arg_list',1,'p_arg_list','interpreter.py',863),
  ('atom -> IDENTIFIER','atom',1,'p_atom','interpreter.py',872),
  ('atom -> NUMBER','atom',1,'p_atom','interpreter.py',873),
  ('atom -> STRING','atom',1,'p_atom','interpreter.py',874),
  ('atom -> TRUE','atom',1,'p_atom','interpreter.py',875),
  ('atom -> FALSE','atom',1,'p_atom','interpreter.py',876),
  ('atom -> LPAREN expression RPAREN','atom',3,'p_atom','interpreter.py',877),
  ('atom -> list_literal','atom',1,'p_atom','interpreter.py',878),
  ('list_literal -> LBRACKET item_list RBRACKET','list_literal',3,'p_list_literal','interpreter.py',899),
  ('item_list -> expression','item_list',1,'p_item_list','interpreter.py',903),
  ('item_list -> item_list COMMA expression','item_list',3,'p_item_list','interpreter.py',904),
  ('item_list -> empty','item_list',1,'p_item_list','interpreter.py',905),
  ('expression -> expression INCREMENT','expression',2,'p_expression_increment','interpreter.py',915),
  ('expression -> expression DECREMENT','expression',2,'p_expression_increment','interpreter.py',916),
  ('expression -> IDENTIFIER PLUS_EQUALS expression','expression',3,'p_expression_compound_assignment','interpreter.py',923),
  ('expression -> IDENTIFIER MINUS_EQUALS expression','expression',3,'p_expression_compound_assignment','interpreter.py',924),
  ('empty -> <empty>','empty',0,'p_empty','interpreter.py',931),
]
