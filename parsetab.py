
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftOR_OPleftAND_OPleftORleftANDnonassocEQNEQnonassocLTLEGTGEleftPLUSMINUSleftTIMESDIVIDEMODrightNOTUMINUSAND AND_OP COMMA DECREMENT DEFINE DIVIDE DOT ELSE EQ EQUALS FALSE FOR FSTRING GE GT IDENTIFIER IF IN INCREMENT LBRACE LE LPAREN LT MINUS MINUS_EQUALS MOD NEQ NOT NUMBER OR OR_OP PLUS PLUS_EQUALS PRINT RANGE RBRACE RESULT RPAREN STRING TIMES TRUE WAIT WHILEprogram : statement_liststatement_list : statement_list statement\n                      | statement\n    statement : assignment\n                 | print_statement\n                 | if_statement\n                 | while_statement\n                 | function_def\n                 | for_loop\n                 | return_statement\n                 | wait_statement\n                 | block\n                 | expression_statement\n    expression_statement : expressionexpression : expression INCREMENT\n                  | expression DECREMENT\n    expression : IDENTIFIER PLUS_EQUALS expression\n                  | IDENTIFIER MINUS_EQUALS expression\n    assignment : IDENTIFIER EQUALS expressionprint_statement : PRINT LPAREN expression RPAREN\n    if_statement : IF expression block\n                 | IF expression block ELSE block\n    for_loop : FOR IDENTIFIER IN iterable blockiterable : expression\n                | RANGE LPAREN expression COMMA expression RPAREN\n    expression : FSTRINGwhile_statement : WHILE expression blockfunction_def : DEFINE IDENTIFIER LPAREN RPAREN block\n                    | DEFINE IDENTIFIER LPAREN param_list RPAREN block\n    param_list : IDENTIFIER\n                  | param_list COMMA IDENTIFIER\n                  | empty\n    return_statement : RESULT expressionexpression : logic_exprlogic_expr : logic_expr OR_OP logic_term\n                  | logic_term\n    logic_term : logic_term AND_OP equality_expr\n                  | equality_expr\n    equality_expr : equality_expr EQ relational_expr\n                     | equality_expr NEQ relational_expr\n                     | relational_expr\n    relational_expr : relational_expr LT additive_expr\n                       | relational_expr LE additive_expr\n                       | relational_expr GT additive_expr\n                       | relational_expr GE additive_expr\n                       | additive_expr\n    additive_expr : additive_expr PLUS term\n                     | additive_expr MINUS term\n                     | term\n    term : term TIMES factor\n            | term DIVIDE factor\n            | term MOD factor\n            | factor\n    factor : PLUS factor\n              | MINUS factor %prec UMINUS\n              | NOT factor\n              | primary\n    primary : primary DOT IDENTIFIER\n               | primary DOT IDENTIFIER LPAREN arg_list RPAREN\n               | function_call\n               | TRUE\n               | FALSE\n               | NUMBER\n               | STRING\n               | IDENTIFIER\n               | LPAREN expression RPAREN\n    wait_statement : WAIT expressionfunction_call : IDENTIFIER LPAREN RPAREN\n                     | IDENTIFIER LPAREN arg_list RPAREN\n    arg_list : expression\n                | arg_list COMMA expression\n                | empty\n    block : LBRACE RBRACE\n             | LBRACE statement_list RBRACEempty :'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,119,120,122,123,124,126,129,130,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,51,51,51,54,55,51,51,14,-26,-34,-36,-38,-41,-46,71,-49,71,-53,71,-57,-60,-61,-62,-63,-64,-2,51,51,51,51,-15,-16,51,-65,-33,-67,-73,14,71,71,71,71,71,71,71,71,71,71,-54,-65,71,71,71,-55,-56,105,-19,-17,-18,-68,-66,-21,-27,110,51,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,51,-20,51,-22,-28,127,-23,51,-29,-59,51,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,26,27,28,29,30,32,34,36,37,38,39,40,41,42,47,48,51,56,57,58,59,70,71,75,76,78,79,80,81,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,120,123,126,129,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,16,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-2,-15,-16,-65,-33,-67,-73,16,-54,-65,-55,-56,-19,-17,-18,-68,-66,-21,-27,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-20,-22,-28,-23,-29,-59,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,26,27,28,29,30,32,34,36,37,38,39,40,41,42,47,48,51,56,57,58,59,70,71,75,76,78,79,80,81,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,120,123,126,129,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,18,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-2,-15,-16,-65,-33,-67,-73,18,-54,-65,-55,-56,-19,-17,-18,-68,-66,-21,-27,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-20,-22,-28,-23,-29,-59,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,26,27,28,29,30,32,34,36,37,38,39,40,41,42,47,48,51,56,57,58,59,70,71,75,76,78,79,80,81,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,120,123,126,129,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,19,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-2,-15,-16,-65,-33,-67,-73,19,-54,-65,-55,-56,-19,-17,-18,-68,-66,-21,-27,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-20,-22,-28,-23,-29,-59,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,26,27,28,29,30,32,34,36,37,38,39,40,41,42,47,48,51,56,57,58,59,70,71,75,76,78,79,80,81,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,120,123,126,129,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,20,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-2,-15,-16,-65,-33,-67,-73,20,-54,-65,-55,-56,-19,-17,-18,-68,-66,-21,-27,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-20,-22,-28,-23,-29,-59,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,26,27,28,29,30,32,34,36,37,38,39,40,41,42,47,48,51,56,57,58,59,70,71,75,76,78,79,80,81,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,120,123,126,129,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,21,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-2,-15,-16,-65,-33,-67,-73,21,-54,-65,-55,-56,-19,-17,-18,-68,-66,-21,-27,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-20,-22,-28,-23,-29,-59,]),'RESULT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,26,27,28,29,30,32,34,36,37,38,39,40,41,42,47,48,51,56,57,58,59,70,71,75,76,78,79,80,81,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,120,123,126,129,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,22,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-2,-15,-16,-65,-33,-67,-73,22,-54,-65,-55,-56,-19,-17,-18,-68,-66,-21,-27,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-20,-22,-28,-23,-29,-59,]),'WAIT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,26,27,28,29,30,32,34,36,37,38,39,40,41,42,47,48,51,56,57,58,59,70,71,75,76,78,79,80,81,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,120,123,126,129,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,23,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-2,-15,-16,-65,-33,-67,-73,23,-54,-65,-55,-56,-19,-17,-18,-68,-66,-21,-27,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-20,-22,-28,-23,-29,-59,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,26,27,28,29,30,32,34,36,37,38,39,40,41,42,47,48,51,52,53,56,57,58,59,70,71,75,76,78,79,80,81,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,111,114,115,119,120,121,123,126,129,132,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,24,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-2,-15,-16,-65,24,24,-33,-67,-73,24,-54,-65,-55,-56,-19,-17,-18,-68,-66,-21,-27,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-20,24,24,24,-24,-22,-28,24,-23,-29,-59,-25,]),'FSTRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,56,57,58,59,70,71,75,76,78,79,80,81,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,119,120,123,124,126,129,130,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,25,25,25,25,25,25,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-2,25,25,25,25,-15,-16,25,-65,-33,-67,-73,25,-54,-65,-55,-56,-19,-17,-18,-68,-66,-21,-27,25,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,25,-20,25,-22,-28,-23,25,-29,-59,25,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,119,120,123,124,126,129,130,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,31,31,31,31,31,31,-26,-34,-36,-38,-41,68,31,-49,31,-53,31,-57,-60,-61,-62,-63,-64,-2,31,31,31,31,-15,-16,31,-65,-33,-67,-73,31,31,31,31,31,31,31,31,31,31,31,-54,-65,31,31,31,-55,-56,-19,-17,-18,-68,-66,-21,-27,31,-74,-35,-37,-39,-40,68,68,68,68,-47,-48,-50,-51,-52,-58,-69,31,-20,31,-22,-28,-23,31,-29,-59,31,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,119,120,123,124,126,129,130,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,33,33,33,33,33,33,-26,-34,-36,-38,-41,69,33,-49,33,-53,33,-57,-60,-61,-62,-63,-64,-2,33,33,33,33,-15,-16,33,-65,-33,-67,-73,33,33,33,33,33,33,33,33,33,33,33,-54,-65,33,33,33,-55,-56,-19,-17,-18,-68,-66,-21,-27,33,-74,-35,-37,-39,-40,69,69,69,69,-47,-48,-50,-51,-52,-58,-69,33,-20,33,-22,-28,-23,33,-29,-59,33,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,119,120,123,124,126,129,130,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,35,35,35,35,35,35,-26,-34,-36,-38,-41,-46,35,-49,35,-53,35,-57,-60,-61,-62,-63,-64,-2,35,35,35,35,-15,-16,35,-65,-33,-67,-73,35,35,35,35,35,35,35,35,35,35,35,-54,-65,35,35,35,-55,-56,-19,-17,-18,-68,-66,-21,-27,35,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,35,-20,35,-22,-28,-23,35,-29,-59,35,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,119,120,123,124,126,129,130,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,38,38,38,38,38,38,-26,-34,-36,-38,-41,-46,38,-49,38,-53,38,-57,-60,-61,-62,-63,-64,-2,38,38,38,38,-15,-16,38,-65,-33,-67,-73,38,38,38,38,38,38,38,38,38,38,38,-54,-65,38,38,38,-55,-56,-19,-17,-18,-68,-66,-21,-27,38,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,38,-20,38,-22,-28,-23,38,-29,-59,38,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,119,120,123,124,126,129,130,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,39,39,39,39,39,39,-26,-34,-36,-38,-41,-46,39,-49,39,-53,39,-57,-60,-61,-62,-63,-64,-2,39,39,39,39,-15,-16,39,-65,-33,-67,-73,39,39,39,39,39,39,39,39,39,39,39,-54,-65,39,39,39,-55,-56,-19,-17,-18,-68,-66,-21,-27,39,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,39,-20,39,-22,-28,-23,39,-29,-59,39,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,119,120,123,124,126,129,130,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,40,40,40,40,40,40,-26,-34,-36,-38,-41,-46,40,-49,40,-53,40,-57,-60,-61,-62,-63,-64,-2,40,40,40,40,-15,-16,40,-65,-33,-67,-73,40,40,40,40,40,40,40,40,40,40,40,-54,-65,40,40,40,-55,-56,-19,-17,-18,-68,-66,-21,-27,40,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,40,-20,40,-22,-28,-23,40,-29,-59,40,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,119,120,123,124,126,129,130,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,41,41,41,41,41,41,-26,-34,-36,-38,-41,-46,41,-49,41,-53,41,-57,-60,-61,-62,-63,-64,-2,41,41,41,41,-15,-16,41,-65,-33,-67,-73,41,41,41,41,41,41,41,41,41,41,41,-54,-65,41,41,41,-55,-56,-19,-17,-18,-68,-66,-21,-27,41,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,41,-20,41,-22,-28,-23,41,-29,-59,41,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,116,117,119,120,123,124,126,129,130,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,46,-14,49,17,17,17,17,17,17,-26,-34,-36,-38,-41,-46,17,-49,17,-53,17,-57,-60,-61,-62,-63,-64,-2,17,17,17,17,-15,-16,17,46,89,-33,-67,-73,17,17,17,17,17,17,17,17,17,17,17,-54,46,17,17,17,-55,-56,-19,-17,-18,-68,-66,-21,-27,17,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,117,-69,17,-20,124,17,-22,-28,-23,17,-29,-59,17,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,26,27,28,29,30,32,34,36,37,38,39,40,41,42,47,48,51,56,57,58,70,71,75,76,78,79,80,81,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,120,123,126,129,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-2,-15,-16,-65,-33,-67,-73,-54,-65,-55,-56,-19,-17,-18,-68,-66,-21,-27,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-20,-22,-28,-23,-29,-59,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,26,27,28,29,30,32,34,36,37,38,39,40,41,42,47,48,51,56,57,58,59,70,71,75,76,78,79,80,81,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,120,123,126,129,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-65,-14,58,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-2,-15,-16,-65,-33,-67,-73,91,-54,-65,-55,-56,-19,-17,-18,-68,-66,-21,-27,-74,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-20,-22,-28,-23,-29,-59,]),'EQUALS':([14,],[43,]),'PLUS_EQUALS':([14,51,],[44,44,]),'MINUS_EQUALS':([14,51,],[45,45,]),'DOT':([14,36,37,38,39,40,41,51,71,81,86,105,106,129,],[-65,77,-60,-61,-62,-63,-64,-65,-65,-68,-66,-58,-69,-59,]),'TIMES':([14,32,34,36,37,38,39,40,41,51,70,71,75,76,81,86,100,101,102,103,104,105,106,129,],[-65,72,-53,-57,-60,-61,-62,-63,-64,-65,-54,-65,-55,-56,-68,-66,72,72,-50,-51,-52,-58,-69,-59,]),'DIVIDE':([14,32,34,36,37,38,39,40,41,51,70,71,75,76,81,86,100,101,102,103,104,105,106,129,],[-65,73,-53,-57,-60,-61,-62,-63,-64,-65,-54,-65,-55,-56,-68,-66,73,73,-50,-51,-52,-58,-69,-59,]),'MOD':([14,32,34,36,37,38,39,40,41,51,70,71,75,76,81,86,100,101,102,103,104,105,106,129,],[-65,74,-53,-57,-60,-61,-62,-63,-64,-65,-54,-65,-55,-56,-68,-66,74,74,-50,-51,-52,-58,-69,-59,]),'LT':([14,29,30,32,34,36,37,38,39,40,41,51,70,71,75,76,81,86,94,95,96,97,98,99,100,101,102,103,104,105,106,129,],[-65,64,-46,-49,-53,-57,-60,-61,-62,-63,-64,-65,-54,-65,-55,-56,-68,-66,64,64,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-59,]),'LE':([14,29,30,32,34,36,37,38,39,40,41,51,70,71,75,76,81,86,94,95,96,97,98,99,100,101,102,103,104,105,106,129,],[-65,65,-46,-49,-53,-57,-60,-61,-62,-63,-64,-65,-54,-65,-55,-56,-68,-66,65,65,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-59,]),'GT':([14,29,30,32,34,36,37,38,39,40,41,51,70,71,75,76,81,86,94,95,96,97,98,99,100,101,102,103,104,105,106,129,],[-65,66,-46,-49,-53,-57,-60,-61,-62,-63,-64,-65,-54,-65,-55,-56,-68,-66,66,66,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-59,]),'GE':([14,29,30,32,34,36,37,38,39,40,41,51,70,71,75,76,81,86,94,95,96,97,98,99,100,101,102,103,104,105,106,129,],[-65,67,-46,-49,-53,-57,-60,-61,-62,-63,-64,-65,-54,-65,-55,-56,-68,-66,67,67,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-59,]),'EQ':([14,28,29,30,32,34,36,37,38,39,40,41,51,70,71,75,76,81,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,129,],[-65,62,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-65,-54,-65,-55,-56,-68,-66,62,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-59,]),'NEQ':([14,28,29,30,32,34,36,37,38,39,40,41,51,70,71,75,76,81,86,93,94,95,96,97,98,99,100,101,102,103,104,105,106,129,],[-65,63,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-65,-54,-65,-55,-56,-68,-66,63,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-59,]),'AND_OP':([14,27,28,29,30,32,34,36,37,38,39,40,41,51,70,71,75,76,81,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,129,],[-65,61,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-65,-54,-65,-55,-56,-68,-66,61,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-59,]),'OR_OP':([14,26,27,28,29,30,32,34,36,37,38,39,40,41,51,70,71,75,76,81,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,129,],[-65,60,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-65,-54,-65,-55,-56,-68,-66,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-59,]),'INCREMENT':([14,15,25,26,27,28,29,30,32,34,36,37,38,39,40,41,47,48,50,51,52,53,56,57,70,71,75,76,78,79,80,81,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,115,118,128,129,131,],[-65,47,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-15,-16,47,-65,47,47,47,47,-54,-65,-55,-56,47,47,47,-68,47,47,-66,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,47,47,47,-59,47,]),'DECREMENT':([14,15,25,26,27,28,29,30,32,34,36,37,38,39,40,41,47,48,50,51,52,53,56,57,70,71,75,76,78,79,80,81,83,85,86,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,115,118,128,129,131,],[-65,48,-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-15,-16,48,-65,48,48,48,48,-54,-65,-55,-56,48,48,48,-68,48,48,-66,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,48,48,48,-59,48,]),'RPAREN':([25,26,27,28,29,30,32,34,36,37,38,39,40,41,46,47,48,50,51,70,71,75,76,79,80,81,82,83,84,85,86,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,112,113,117,118,125,127,129,131,],[-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,81,-15,-16,86,-65,-54,-65,-55,-56,-17,-18,-68,106,-70,-72,108,-66,111,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-30,121,-32,-75,-71,129,-31,-59,132,]),'COMMA':([25,26,27,28,29,30,32,34,36,37,38,39,40,41,46,47,48,51,70,71,75,76,79,80,81,82,83,84,86,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,112,113,117,118,125,127,128,129,],[-26,-34,-36,-38,-41,-46,-49,-53,-57,-60,-61,-62,-63,-64,-75,-15,-16,-65,-54,-65,-55,-56,-17,-18,-68,107,-70,-72,-66,-75,-35,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-52,-58,-69,-30,122,-32,-75,-71,107,-31,130,-59,]),'IN':([55,],[90,]),'ELSE':([58,87,91,],[-73,109,-74,]),'RANGE':([90,],[116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,24,],[2,59,]),'statement':([0,2,24,59,],[3,42,3,42,]),'assignment':([0,2,24,59,],[4,4,4,4,]),'print_statement':([0,2,24,59,],[5,5,5,5,]),'if_statement':([0,2,24,59,],[6,6,6,6,]),'while_statement':([0,2,24,59,],[7,7,7,7,]),'function_def':([0,2,24,59,],[8,8,8,8,]),'for_loop':([0,2,24,59,],[9,9,9,9,]),'return_statement':([0,2,24,59,],[10,10,10,10,]),'wait_statement':([0,2,24,59,],[11,11,11,11,]),'block':([0,2,24,52,53,59,109,111,114,121,],[12,12,12,87,88,12,119,120,123,126,]),'expression_statement':([0,2,24,59,],[13,13,13,13,]),'expression':([0,2,17,18,19,22,23,24,43,44,45,46,49,59,90,107,117,124,130,],[15,15,50,52,53,56,57,15,78,79,80,83,85,15,115,118,83,128,131,]),'logic_expr':([0,2,17,18,19,22,23,24,43,44,45,46,49,59,90,107,117,124,130,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'logic_term':([0,2,17,18,19,22,23,24,43,44,45,46,49,59,60,90,107,117,124,130,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,92,27,27,27,27,27,]),'equality_expr':([0,2,17,18,19,22,23,24,43,44,45,46,49,59,60,61,90,107,117,124,130,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,93,28,28,28,28,28,]),'relational_expr':([0,2,17,18,19,22,23,24,43,44,45,46,49,59,60,61,62,63,90,107,117,124,130,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,94,95,29,29,29,29,29,]),'additive_expr':([0,2,17,18,19,22,23,24,43,44,45,46,49,59,60,61,62,63,64,65,66,67,90,107,117,124,130,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,96,97,98,99,30,30,30,30,30,]),'term':([0,2,17,18,19,22,23,24,43,44,45,46,49,59,60,61,62,63,64,65,66,67,68,69,90,107,117,124,130,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,101,32,32,32,32,32,]),'factor':([0,2,17,18,19,22,23,24,31,33,35,43,44,45,46,49,59,60,61,62,63,64,65,66,67,68,69,72,73,74,90,107,117,124,130,],[34,34,34,34,34,34,34,34,70,75,76,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,102,103,104,34,34,34,34,34,]),'primary':([0,2,17,18,19,22,23,24,31,33,35,43,44,45,46,49,59,60,61,62,63,64,65,66,67,68,69,72,73,74,90,107,117,124,130,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'function_call':([0,2,17,18,19,22,23,24,31,33,35,43,44,45,46,49,59,60,61,62,63,64,65,66,67,68,69,72,73,74,90,107,117,124,130,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'arg_list':([46,117,],[82,125,]),'empty':([46,89,117,],[84,113,84,]),'param_list':([89,],[112,]),'iterable':([90,],[114,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','RePy.py',212),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','RePy.py',216),
  ('statement_list -> statement','statement_list',1,'p_statement_list','RePy.py',217),
  ('statement -> assignment','statement',1,'p_statement','RePy.py',225),
  ('statement -> print_statement','statement',1,'p_statement','RePy.py',226),
  ('statement -> if_statement','statement',1,'p_statement','RePy.py',227),
  ('statement -> while_statement','statement',1,'p_statement','RePy.py',228),
  ('statement -> function_def','statement',1,'p_statement','RePy.py',229),
  ('statement -> for_loop','statement',1,'p_statement','RePy.py',230),
  ('statement -> return_statement','statement',1,'p_statement','RePy.py',231),
  ('statement -> wait_statement','statement',1,'p_statement','RePy.py',232),
  ('statement -> block','statement',1,'p_statement','RePy.py',233),
  ('statement -> expression_statement','statement',1,'p_statement','RePy.py',234),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','RePy.py',239),
  ('expression -> expression INCREMENT','expression',2,'p_expression_increment','RePy.py',243),
  ('expression -> expression DECREMENT','expression',2,'p_expression_increment','RePy.py',244),
  ('expression -> IDENTIFIER PLUS_EQUALS expression','expression',3,'p_expression_compound_assignment','RePy.py',252),
  ('expression -> IDENTIFIER MINUS_EQUALS expression','expression',3,'p_expression_compound_assignment','RePy.py',253),
  ('assignment -> IDENTIFIER EQUALS expression','assignment',3,'p_assignment','RePy.py',262),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','RePy.py',266),
  ('if_statement -> IF expression block','if_statement',3,'p_if_statement','RePy.py',271),
  ('if_statement -> IF expression block ELSE block','if_statement',5,'p_if_statement','RePy.py',272),
  ('for_loop -> FOR IDENTIFIER IN iterable block','for_loop',5,'p_for_loop','RePy.py',280),
  ('iterable -> expression','iterable',1,'p_iterable','RePy.py',284),
  ('iterable -> RANGE LPAREN expression COMMA expression RPAREN','iterable',6,'p_iterable','RePy.py',285),
  ('expression -> FSTRING','expression',1,'p_expression_fstring','RePy.py',293),
  ('while_statement -> WHILE expression block','while_statement',3,'p_while_statement','RePy.py',297),
  ('function_def -> DEFINE IDENTIFIER LPAREN RPAREN block','function_def',5,'p_function_def','RePy.py',301),
  ('function_def -> DEFINE IDENTIFIER LPAREN param_list RPAREN block','function_def',6,'p_function_def','RePy.py',302),
  ('param_list -> IDENTIFIER','param_list',1,'p_param_list','RePy.py',310),
  ('param_list -> param_list COMMA IDENTIFIER','param_list',3,'p_param_list','RePy.py',311),
  ('param_list -> empty','param_list',1,'p_param_list','RePy.py',312),
  ('return_statement -> RESULT expression','return_statement',2,'p_return_statement','RePy.py',322),
  ('expression -> logic_expr','expression',1,'p_expression','RePy.py',326),
  ('logic_expr -> logic_expr OR_OP logic_term','logic_expr',3,'p_logic_expr','RePy.py',330),
  ('logic_expr -> logic_term','logic_expr',1,'p_logic_expr','RePy.py',331),
  ('logic_term -> logic_term AND_OP equality_expr','logic_term',3,'p_logic_term','RePy.py',339),
  ('logic_term -> equality_expr','logic_term',1,'p_logic_term','RePy.py',340),
  ('equality_expr -> equality_expr EQ relational_expr','equality_expr',3,'p_equality_expr','RePy.py',348),
  ('equality_expr -> equality_expr NEQ relational_expr','equality_expr',3,'p_equality_expr','RePy.py',349),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr','RePy.py',350),
  ('relational_expr -> relational_expr LT additive_expr','relational_expr',3,'p_relational_expr','RePy.py',358),
  ('relational_expr -> relational_expr LE additive_expr','relational_expr',3,'p_relational_expr','RePy.py',359),
  ('relational_expr -> relational_expr GT additive_expr','relational_expr',3,'p_relational_expr','RePy.py',360),
  ('relational_expr -> relational_expr GE additive_expr','relational_expr',3,'p_relational_expr','RePy.py',361),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr','RePy.py',362),
  ('additive_expr -> additive_expr PLUS term','additive_expr',3,'p_additive_expr','RePy.py',370),
  ('additive_expr -> additive_expr MINUS term','additive_expr',3,'p_additive_expr','RePy.py',371),
  ('additive_expr -> term','additive_expr',1,'p_additive_expr','RePy.py',372),
  ('term -> term TIMES factor','term',3,'p_term','RePy.py',380),
  ('term -> term DIVIDE factor','term',3,'p_term','RePy.py',381),
  ('term -> term MOD factor','term',3,'p_term','RePy.py',382),
  ('term -> factor','term',1,'p_term','RePy.py',383),
  ('factor -> PLUS factor','factor',2,'p_factor','RePy.py',391),
  ('factor -> MINUS factor','factor',2,'p_factor','RePy.py',392),
  ('factor -> NOT factor','factor',2,'p_factor','RePy.py',393),
  ('factor -> primary','factor',1,'p_factor','RePy.py',394),
  ('primary -> primary DOT IDENTIFIER','primary',3,'p_primary','RePy.py',402),
  ('primary -> primary DOT IDENTIFIER LPAREN arg_list RPAREN','primary',6,'p_primary','RePy.py',403),
  ('primary -> function_call','primary',1,'p_primary','RePy.py',404),
  ('primary -> TRUE','primary',1,'p_primary','RePy.py',405),
  ('primary -> FALSE','primary',1,'p_primary','RePy.py',406),
  ('primary -> NUMBER','primary',1,'p_primary','RePy.py',407),
  ('primary -> STRING','primary',1,'p_primary','RePy.py',408),
  ('primary -> IDENTIFIER','primary',1,'p_primary','RePy.py',409),
  ('primary -> LPAREN expression RPAREN','primary',3,'p_primary','RePy.py',410),
  ('wait_statement -> WAIT expression','wait_statement',2,'p_wait_statement','RePy.py',442),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','RePy.py',446),
  ('function_call -> IDENTIFIER LPAREN arg_list RPAREN','function_call',4,'p_function_call','RePy.py',447),
  ('arg_list -> expression','arg_list',1,'p_arg_list','RePy.py',455),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','RePy.py',456),
  ('arg_list -> empty','arg_list',1,'p_arg_list','RePy.py',457),
  ('block -> LBRACE RBRACE','block',2,'p_block','RePy.py',467),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','RePy.py',468),
  ('empty -> <empty>','empty',0,'p_empty','RePy.py',475),
]
