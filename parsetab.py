
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftORleftANDnonassocEQNEQnonassocLTLEGTGEleftPLUSMINUSleftTIMESDIVIDEMODrightNOTUMINUSAND BREAK COMMA DECREMENT DEFINE DIVIDE DOT ELSE EQ EQUALS FALSE FOR GE GT IDENTIFIER IF IMPORT IN INCREMENT LBRACE LE LPAREN LT MINUS MINUS_EQUALS MOD NEQ NOT NUMBER OR PLUS PLUS_EQUALS PRINT RANGE RBRACE RESULT RPAREN STRING TIMES TRUE WAIT WHILEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : assignment\n                 | print_statement\n                 | if_statement\n                 | while_statement\n                 | function_def\n                 | for_loop\n                 | return_statement\n                 | wait_statement\n                 | block\n                 | expression_statement\n                 | import_statement\n                 | BREAKblock : LBRACE statement_list RBRACE\n             | LBRACE RBRACEexpression_statement : expressionassignment : IDENTIFIER EQUALS expressionprint_statement : PRINT LPAREN expression RPARENif_statement : IF expression block\n                    | IF expression block ELSE blockfor_loop : FOR IDENTIFIER IN iterable blockiterable : expression\n                | RANGE LPAREN expression COMMA expression RPARENwhile_statement : WHILE expression blockfunction_def : DEFINE IDENTIFIER LPAREN RPAREN block\n                    | DEFINE IDENTIFIER LPAREN param_list RPAREN blockparam_list : IDENTIFIER\n                  | param_list COMMA IDENTIFIER\n                  | emptyimport_statement : IMPORT IDENTIFIERreturn_statement : RESULT expressionwait_statement : WAIT expressionexpression : logic_or_exprlogic_or_expr : logic_or_expr OR logic_and_expr\n                     | logic_and_exprlogic_and_expr : logic_and_expr AND equality_expr\n                      | equality_exprequality_expr : relational_expr\n                     | equality_expr EQ relational_expr\n                     | equality_expr NEQ relational_exprrelational_expr : additive_expr\n                       | relational_expr LT additive_expr\n                       | relational_expr GT additive_expr\n                       | relational_expr LE additive_expr\n                       | relational_expr GE additive_expradditive_expr : additive_expr PLUS term\n                     | additive_expr MINUS term\n                     | termterm : term TIMES factor\n            | term DIVIDE factor\n            | term MOD factor\n            | factorfactor : PLUS factor\n              | MINUS factor %prec UMINUS\n              | NOT factor\n              | primaryprimary : atom\n               | primary DOT IDENTIFIER\n               | primary DOT IDENTIFIER LPAREN arg_list RPAREN\n               | primary DOT IDENTIFIER LPAREN RPAREN\n               | primary LPAREN arg_list RPAREN\n               | primary LPAREN RPARENarg_list : expression\n                | arg_list COMMA expression\n                | emptyatom : IDENTIFIER\n            | NUMBER\n            | STRING\n            | TRUE\n            | FALSE\n            | LPAREN expression RPARENexpression : expression INCREMENT\n                  | expression DECREMENTexpression : IDENTIFIER PLUS_EQUALS expression\n                  | IDENTIFIER MINUS_EQUALS expressionempty :'
    
_lr_action_items = {'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,57,58,59,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,119,121,122,125,128,130,133,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,15,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,-33,-34,15,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,-63,-22,-27,-23,-62,-28,-61,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,118,119,120,121,122,124,125,126,128,130,133,134,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,52,52,52,55,56,52,52,16,61,-35,-37,-39,-40,-43,73,-50,73,-54,73,-58,-59,-69,-70,-71,-72,-2,52,52,52,-74,-75,52,-68,-33,-34,16,-17,-32,73,73,73,73,73,73,73,73,73,73,-55,-68,73,73,73,-56,-57,104,52,-19,-76,-77,-73,-21,-26,111,52,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,52,-63,52,-22,-27,131,-23,52,-62,-28,-61,52,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,57,58,59,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,119,121,122,125,128,130,133,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,18,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,-33,-34,18,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,-63,-22,-27,-23,-62,-28,-61,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,57,58,59,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,119,121,122,125,128,130,133,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,20,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,-33,-34,20,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,-63,-22,-27,-23,-62,-28,-61,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,57,58,59,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,119,121,122,125,128,130,133,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,21,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,-33,-34,21,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,-63,-22,-27,-23,-62,-28,-61,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,57,58,59,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,119,121,122,125,128,130,133,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,22,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,-33,-34,22,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,-63,-22,-27,-23,-62,-28,-61,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,57,58,59,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,119,121,122,125,128,130,133,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,23,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,-33,-34,23,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,-63,-22,-27,-23,-62,-28,-61,]),'RESULT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,57,58,59,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,119,121,122,125,128,130,133,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,24,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,-33,-34,24,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,-63,-22,-27,-23,-62,-28,-61,]),'WAIT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,57,58,59,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,119,121,122,125,128,130,133,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,25,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,-33,-34,25,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,-63,-22,-27,-23,-62,-28,-61,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,53,54,57,58,59,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,110,112,115,116,119,121,122,123,125,128,130,133,136,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,26,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,26,26,-33,-34,26,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,26,26,26,-24,-63,-22,-27,26,-23,-62,-28,-61,-25,]),'IMPORT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,57,58,59,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,119,121,122,125,128,130,133,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,27,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,-33,-34,27,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,-63,-22,-27,-23,-62,-28,-61,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,118,119,120,121,122,125,126,128,130,133,134,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,33,33,33,33,33,33,-35,-37,-39,-40,70,33,-50,33,-54,33,-58,-59,-69,-70,-71,-72,-2,33,33,33,-74,-75,33,-68,-33,-34,33,-17,-32,33,33,33,33,33,33,33,33,33,33,-55,-68,33,33,33,-56,-57,33,-19,-76,-77,-73,-21,-26,33,-16,-36,-38,-41,-42,70,70,70,70,-48,-49,-51,-52,-53,-60,-64,-20,33,-63,33,-22,-27,-23,33,-62,-28,-61,33,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,118,119,120,121,122,125,126,128,130,133,134,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,35,35,35,35,35,35,-35,-37,-39,-40,71,35,-50,35,-54,35,-58,-59,-69,-70,-71,-72,-2,35,35,35,-74,-75,35,-68,-33,-34,35,-17,-32,35,35,35,35,35,35,35,35,35,35,-55,-68,35,35,35,-56,-57,35,-19,-76,-77,-73,-21,-26,35,-16,-36,-38,-41,-42,71,71,71,71,-48,-49,-51,-52,-53,-60,-64,-20,35,-63,35,-22,-27,-23,35,-62,-28,-61,35,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,118,119,120,121,122,125,126,128,130,133,134,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,37,37,37,37,37,37,-35,-37,-39,-40,-43,37,-50,37,-54,37,-58,-59,-69,-70,-71,-72,-2,37,37,37,-74,-75,37,-68,-33,-34,37,-17,-32,37,37,37,37,37,37,37,37,37,37,-55,-68,37,37,37,-56,-57,37,-19,-76,-77,-73,-21,-26,37,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,37,-63,37,-22,-27,-23,37,-62,-28,-61,37,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,118,119,120,121,122,125,126,128,130,133,134,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,40,40,40,40,40,40,-35,-37,-39,-40,-43,40,-50,40,-54,40,-58,-59,-69,-70,-71,-72,-2,40,40,40,-74,-75,40,-68,-33,-34,40,-17,-32,40,40,40,40,40,40,40,40,40,40,-55,-68,40,40,40,-56,-57,40,-19,-76,-77,-73,-21,-26,40,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,40,-63,40,-22,-27,-23,40,-62,-28,-61,40,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,118,119,120,121,122,125,126,128,130,133,134,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,41,41,41,41,41,41,-35,-37,-39,-40,-43,41,-50,41,-54,41,-58,-59,-69,-70,-71,-72,-2,41,41,41,-74,-75,41,-68,-33,-34,41,-17,-32,41,41,41,41,41,41,41,41,41,41,-55,-68,41,41,41,-56,-57,41,-19,-76,-77,-73,-21,-26,41,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,41,-63,41,-22,-27,-23,41,-62,-28,-61,41,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,118,119,120,121,122,125,126,128,130,133,134,],[42,42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,42,42,42,42,42,42,-35,-37,-39,-40,-43,42,-50,42,-54,42,-58,-59,-69,-70,-71,-72,-2,42,42,42,-74,-75,42,-68,-33,-34,42,-17,-32,42,42,42,42,42,42,42,42,42,42,-55,-68,42,42,42,-56,-57,42,-19,-76,-77,-73,-21,-26,42,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,42,-63,42,-22,-27,-23,42,-62,-28,-61,42,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,118,119,120,121,122,125,126,128,130,133,134,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,43,43,43,43,43,43,-35,-37,-39,-40,-43,43,-50,43,-54,43,-58,-59,-69,-70,-71,-72,-2,43,43,43,-74,-75,43,-68,-33,-34,43,-17,-32,43,43,43,43,43,43,43,43,43,43,-55,-68,43,43,43,-56,-57,43,-19,-76,-77,-73,-21,-26,43,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,43,-63,43,-22,-27,-23,43,-62,-28,-61,43,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,117,118,119,120,121,122,125,126,128,130,133,134,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,50,19,19,19,19,19,19,-35,-37,-39,-40,-43,19,-50,19,-54,19,80,-59,-69,-70,-71,-72,-2,19,19,19,-74,-75,19,-68,88,-33,-34,19,-17,-32,19,19,19,19,19,19,19,19,19,19,-55,-68,19,19,19,-56,-57,19,-19,-76,-77,-73,-21,-26,19,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,118,-64,-20,126,19,-63,19,-22,-27,-23,19,-62,-28,-61,19,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,57,58,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,119,121,122,125,128,130,133,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,-33,-34,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,-63,-22,-27,-23,-62,-28,-61,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,28,29,30,31,32,34,36,38,39,40,41,42,43,44,48,49,52,57,58,59,60,61,72,73,77,78,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,109,119,121,122,125,128,130,133,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-68,-18,60,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-2,-74,-75,-68,-33,-34,90,-17,-32,-55,-68,-56,-57,-19,-76,-77,-73,-21,-26,-16,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-20,-63,-22,-27,-23,-62,-28,-61,]),'EQUALS':([16,],[45,]),'PLUS_EQUALS':([16,52,],[46,46,]),'MINUS_EQUALS':([16,52,],[47,47,]),'DOT':([16,38,39,40,41,42,43,52,73,85,104,106,119,128,133,],[-68,79,-59,-69,-70,-71,-72,-68,-68,-73,-60,-64,-63,-62,-61,]),'TIMES':([16,34,36,38,39,40,41,42,43,52,72,73,77,78,85,99,100,101,102,103,104,106,119,128,133,],[-68,74,-54,-58,-59,-69,-70,-71,-72,-68,-55,-68,-56,-57,-73,74,74,-51,-52,-53,-60,-64,-63,-62,-61,]),'DIVIDE':([16,34,36,38,39,40,41,42,43,52,72,73,77,78,85,99,100,101,102,103,104,106,119,128,133,],[-68,75,-54,-58,-59,-69,-70,-71,-72,-68,-55,-68,-56,-57,-73,75,75,-51,-52,-53,-60,-64,-63,-62,-61,]),'MOD':([16,34,36,38,39,40,41,42,43,52,72,73,77,78,85,99,100,101,102,103,104,106,119,128,133,],[-68,76,-54,-58,-59,-69,-70,-71,-72,-68,-55,-68,-56,-57,-73,76,76,-51,-52,-53,-60,-64,-63,-62,-61,]),'LT':([16,31,32,34,36,38,39,40,41,42,43,52,72,73,77,78,85,93,94,95,96,97,98,99,100,101,102,103,104,106,119,128,133,],[-68,66,-43,-50,-54,-58,-59,-69,-70,-71,-72,-68,-55,-68,-56,-57,-73,66,66,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-63,-62,-61,]),'GT':([16,31,32,34,36,38,39,40,41,42,43,52,72,73,77,78,85,93,94,95,96,97,98,99,100,101,102,103,104,106,119,128,133,],[-68,67,-43,-50,-54,-58,-59,-69,-70,-71,-72,-68,-55,-68,-56,-57,-73,67,67,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-63,-62,-61,]),'LE':([16,31,32,34,36,38,39,40,41,42,43,52,72,73,77,78,85,93,94,95,96,97,98,99,100,101,102,103,104,106,119,128,133,],[-68,68,-43,-50,-54,-58,-59,-69,-70,-71,-72,-68,-55,-68,-56,-57,-73,68,68,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-63,-62,-61,]),'GE':([16,31,32,34,36,38,39,40,41,42,43,52,72,73,77,78,85,93,94,95,96,97,98,99,100,101,102,103,104,106,119,128,133,],[-68,69,-43,-50,-54,-58,-59,-69,-70,-71,-72,-68,-55,-68,-56,-57,-73,69,69,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-63,-62,-61,]),'EQ':([16,30,31,32,34,36,38,39,40,41,42,43,52,72,73,77,78,85,92,93,94,95,96,97,98,99,100,101,102,103,104,106,119,128,133,],[-68,64,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-68,-55,-68,-56,-57,-73,64,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-63,-62,-61,]),'NEQ':([16,30,31,32,34,36,38,39,40,41,42,43,52,72,73,77,78,85,92,93,94,95,96,97,98,99,100,101,102,103,104,106,119,128,133,],[-68,65,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-68,-55,-68,-56,-57,-73,65,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-63,-62,-61,]),'AND':([16,29,30,31,32,34,36,38,39,40,41,42,43,52,72,73,77,78,85,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,119,128,133,],[-68,63,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-68,-55,-68,-56,-57,-73,63,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-63,-62,-61,]),'OR':([16,28,29,30,31,32,34,36,38,39,40,41,42,43,52,72,73,77,78,85,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,119,128,133,],[-68,62,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-68,-55,-68,-56,-57,-73,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,-63,-62,-61,]),'INCREMENT':([16,17,28,29,30,31,32,34,36,38,39,40,41,42,43,48,49,51,52,53,54,57,58,72,73,77,78,81,82,83,84,85,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,116,119,128,129,132,133,135,],[-68,48,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-75,48,-68,48,48,48,48,-55,-68,-56,-57,48,48,48,48,-73,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,48,48,-63,-62,48,48,-61,48,]),'DECREMENT':([16,17,28,29,30,31,32,34,36,38,39,40,41,42,43,48,49,51,52,53,54,57,58,72,73,77,78,81,82,83,84,85,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,116,119,128,129,132,133,135,],[-68,49,-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-75,49,-68,49,49,49,49,-55,-68,-56,-57,49,49,49,49,-73,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,-64,49,49,-63,-62,49,49,-61,49,]),'RPAREN':([28,29,30,31,32,34,36,38,39,40,41,42,43,48,49,51,52,72,73,77,78,80,82,83,84,85,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,113,114,118,119,127,128,129,131,133,135,],[-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-75,85,-68,-55,-68,-56,-57,106,-76,-77,109,-73,112,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,119,-64,-65,-67,-29,123,-31,128,-63,133,-62,-66,-30,-61,136,]),'COMMA':([28,29,30,31,32,34,36,38,39,40,41,42,43,48,49,52,72,73,77,78,80,82,83,85,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,113,114,118,119,127,128,129,131,132,133,],[-35,-37,-39,-40,-43,-50,-54,-58,-59,-69,-70,-71,-72,-74,-75,-68,-55,-68,-56,-57,-78,-76,-77,-73,-78,-36,-38,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-53,-60,120,-64,-65,-67,-29,124,-31,-78,-63,120,-62,-66,-30,134,-61,]),'IN':([56,],[89,]),'ELSE':([60,86,90,],[-17,110,-16,]),'RANGE':([89,],[117,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,26,],[2,59,]),'statement':([0,2,26,59,],[3,44,3,44,]),'assignment':([0,2,26,59,],[4,4,4,4,]),'print_statement':([0,2,26,59,],[5,5,5,5,]),'if_statement':([0,2,26,59,],[6,6,6,6,]),'while_statement':([0,2,26,59,],[7,7,7,7,]),'function_def':([0,2,26,59,],[8,8,8,8,]),'for_loop':([0,2,26,59,],[9,9,9,9,]),'return_statement':([0,2,26,59,],[10,10,10,10,]),'wait_statement':([0,2,26,59,],[11,11,11,11,]),'block':([0,2,26,53,54,59,110,112,115,123,],[12,12,12,86,87,12,121,122,125,130,]),'expression_statement':([0,2,26,59,],[13,13,13,13,]),'import_statement':([0,2,26,59,],[14,14,14,14,]),'expression':([0,2,19,20,21,24,25,26,45,46,47,50,59,80,89,118,120,126,134,],[17,17,51,53,54,57,58,17,81,82,83,84,17,107,116,107,129,132,135,]),'logic_or_expr':([0,2,19,20,21,24,25,26,45,46,47,50,59,80,89,118,120,126,134,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'logic_and_expr':([0,2,19,20,21,24,25,26,45,46,47,50,59,62,80,89,118,120,126,134,],[29,29,29,29,29,29,29,29,29,29,29,29,29,91,29,29,29,29,29,29,]),'equality_expr':([0,2,19,20,21,24,25,26,45,46,47,50,59,62,63,80,89,118,120,126,134,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,92,30,30,30,30,30,30,]),'relational_expr':([0,2,19,20,21,24,25,26,45,46,47,50,59,62,63,64,65,80,89,118,120,126,134,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,93,94,31,31,31,31,31,31,]),'additive_expr':([0,2,19,20,21,24,25,26,45,46,47,50,59,62,63,64,65,66,67,68,69,80,89,118,120,126,134,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,95,96,97,98,32,32,32,32,32,32,]),'term':([0,2,19,20,21,24,25,26,45,46,47,50,59,62,63,64,65,66,67,68,69,70,71,80,89,118,120,126,134,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,99,100,34,34,34,34,34,34,]),'factor':([0,2,19,20,21,24,25,26,33,35,37,45,46,47,50,59,62,63,64,65,66,67,68,69,70,71,74,75,76,80,89,118,120,126,134,],[36,36,36,36,36,36,36,36,72,77,78,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,101,102,103,36,36,36,36,36,36,]),'primary':([0,2,19,20,21,24,25,26,33,35,37,45,46,47,50,59,62,63,64,65,66,67,68,69,70,71,74,75,76,80,89,118,120,126,134,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'atom':([0,2,19,20,21,24,25,26,33,35,37,45,46,47,50,59,62,63,64,65,66,67,68,69,70,71,74,75,76,80,89,118,120,126,134,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'arg_list':([80,118,],[105,127,]),'empty':([80,88,118,],[108,114,108,]),'param_list':([88,],[113,]),'iterable':([89,],[115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','interpreter.py',400),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','interpreter.py',404),
  ('statement_list -> statement','statement_list',1,'p_statement_list','interpreter.py',405),
  ('statement -> assignment','statement',1,'p_statement','interpreter.py',409),
  ('statement -> print_statement','statement',1,'p_statement','interpreter.py',410),
  ('statement -> if_statement','statement',1,'p_statement','interpreter.py',411),
  ('statement -> while_statement','statement',1,'p_statement','interpreter.py',412),
  ('statement -> function_def','statement',1,'p_statement','interpreter.py',413),
  ('statement -> for_loop','statement',1,'p_statement','interpreter.py',414),
  ('statement -> return_statement','statement',1,'p_statement','interpreter.py',415),
  ('statement -> wait_statement','statement',1,'p_statement','interpreter.py',416),
  ('statement -> block','statement',1,'p_statement','interpreter.py',417),
  ('statement -> expression_statement','statement',1,'p_statement','interpreter.py',418),
  ('statement -> import_statement','statement',1,'p_statement','interpreter.py',419),
  ('statement -> BREAK','statement',1,'p_statement','interpreter.py',420),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','interpreter.py',424),
  ('block -> LBRACE RBRACE','block',2,'p_block','interpreter.py',425),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','interpreter.py',429),
  ('assignment -> IDENTIFIER EQUALS expression','assignment',3,'p_assignment','interpreter.py',433),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','interpreter.py',437),
  ('if_statement -> IF expression block','if_statement',3,'p_if_statement','interpreter.py',441),
  ('if_statement -> IF expression block ELSE block','if_statement',5,'p_if_statement','interpreter.py',442),
  ('for_loop -> FOR IDENTIFIER IN iterable block','for_loop',5,'p_for_loop','interpreter.py',446),
  ('iterable -> expression','iterable',1,'p_iterable','interpreter.py',450),
  ('iterable -> RANGE LPAREN expression COMMA expression RPAREN','iterable',6,'p_iterable','interpreter.py',451),
  ('while_statement -> WHILE expression block','while_statement',3,'p_while_statement','interpreter.py',455),
  ('function_def -> DEFINE IDENTIFIER LPAREN RPAREN block','function_def',5,'p_function_def','interpreter.py',459),
  ('function_def -> DEFINE IDENTIFIER LPAREN param_list RPAREN block','function_def',6,'p_function_def','interpreter.py',460),
  ('param_list -> IDENTIFIER','param_list',1,'p_param_list','interpreter.py',467),
  ('param_list -> param_list COMMA IDENTIFIER','param_list',3,'p_param_list','interpreter.py',468),
  ('param_list -> empty','param_list',1,'p_param_list','interpreter.py',469),
  ('import_statement -> IMPORT IDENTIFIER','import_statement',2,'p_import_statement','interpreter.py',478),
  ('return_statement -> RESULT expression','return_statement',2,'p_return_statement','interpreter.py',482),
  ('wait_statement -> WAIT expression','wait_statement',2,'p_wait_statement','interpreter.py',486),
  ('expression -> logic_or_expr','expression',1,'p_expression','interpreter.py',490),
  ('logic_or_expr -> logic_or_expr OR logic_and_expr','logic_or_expr',3,'p_logic_or_expr','interpreter.py',494),
  ('logic_or_expr -> logic_and_expr','logic_or_expr',1,'p_logic_or_expr','interpreter.py',495),
  ('logic_and_expr -> logic_and_expr AND equality_expr','logic_and_expr',3,'p_logic_and_expr','interpreter.py',499),
  ('logic_and_expr -> equality_expr','logic_and_expr',1,'p_logic_and_expr','interpreter.py',500),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr','interpreter.py',504),
  ('equality_expr -> equality_expr EQ relational_expr','equality_expr',3,'p_equality_expr','interpreter.py',505),
  ('equality_expr -> equality_expr NEQ relational_expr','equality_expr',3,'p_equality_expr','interpreter.py',506),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr','interpreter.py',510),
  ('relational_expr -> relational_expr LT additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',511),
  ('relational_expr -> relational_expr GT additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',512),
  ('relational_expr -> relational_expr LE additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',513),
  ('relational_expr -> relational_expr GE additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',514),
  ('additive_expr -> additive_expr PLUS term','additive_expr',3,'p_additive_expr','interpreter.py',518),
  ('additive_expr -> additive_expr MINUS term','additive_expr',3,'p_additive_expr','interpreter.py',519),
  ('additive_expr -> term','additive_expr',1,'p_additive_expr','interpreter.py',520),
  ('term -> term TIMES factor','term',3,'p_term','interpreter.py',524),
  ('term -> term DIVIDE factor','term',3,'p_term','interpreter.py',525),
  ('term -> term MOD factor','term',3,'p_term','interpreter.py',526),
  ('term -> factor','term',1,'p_term','interpreter.py',527),
  ('factor -> PLUS factor','factor',2,'p_factor','interpreter.py',531),
  ('factor -> MINUS factor','factor',2,'p_factor','interpreter.py',532),
  ('factor -> NOT factor','factor',2,'p_factor','interpreter.py',533),
  ('factor -> primary','factor',1,'p_factor','interpreter.py',534),
  ('primary -> atom','primary',1,'p_primary','interpreter.py',538),
  ('primary -> primary DOT IDENTIFIER','primary',3,'p_primary','interpreter.py',539),
  ('primary -> primary DOT IDENTIFIER LPAREN arg_list RPAREN','primary',6,'p_primary','interpreter.py',540),
  ('primary -> primary DOT IDENTIFIER LPAREN RPAREN','primary',5,'p_primary','interpreter.py',541),
  ('primary -> primary LPAREN arg_list RPAREN','primary',4,'p_primary','interpreter.py',542),
  ('primary -> primary LPAREN RPAREN','primary',3,'p_primary','interpreter.py',543),
  ('arg_list -> expression','arg_list',1,'p_arg_list','interpreter.py',566),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','interpreter.py',567),
  ('arg_list -> empty','arg_list',1,'p_arg_list','interpreter.py',568),
  ('atom -> IDENTIFIER','atom',1,'p_atom','interpreter.py',577),
  ('atom -> NUMBER','atom',1,'p_atom','interpreter.py',578),
  ('atom -> STRING','atom',1,'p_atom','interpreter.py',579),
  ('atom -> TRUE','atom',1,'p_atom','interpreter.py',580),
  ('atom -> FALSE','atom',1,'p_atom','interpreter.py',581),
  ('atom -> LPAREN expression RPAREN','atom',3,'p_atom','interpreter.py',582),
  ('expression -> expression INCREMENT','expression',2,'p_expression_increment','interpreter.py',599),
  ('expression -> expression DECREMENT','expression',2,'p_expression_increment','interpreter.py',600),
  ('expression -> IDENTIFIER PLUS_EQUALS expression','expression',3,'p_expression_compound_assignment','interpreter.py',607),
  ('expression -> IDENTIFIER MINUS_EQUALS expression','expression',3,'p_expression_compound_assignment','interpreter.py',608),
  ('empty -> <empty>','empty',0,'p_empty','interpreter.py',615),
]
