
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftOR_OPORleftAND_OPANDnonassocEQNEQnonassocLTLEGTGEleftPLUSMINUSleftTIMESDIVIDEMODrightNOTUMINUSAND AND_OP COMMA DECREMENT DEFINE DIVIDE DOT ELSE EQ EQUALS FALSE FOR F_QUOTE GE GT IDENTIFIER IF IMPORT IN INCREMENT LBRACE LE LPAREN LT MINUS MINUS_EQUALS MOD NEQ NOT NUMBER OR OR_OP PLUS PLUS_EQUALS PRINT QUOTE RANGE RBRACE RESULT RPAREN STRING STRING_CONTENT TIMES TRUE WAIT WHILEprogram : statement_liststatement_list : statement_list statement\n                      | statement\n    statement : assignment\n                 | print_statement\n                 | if_statement\n                 | while_statement\n                 | function_def\n                 | for_loop\n                 | return_statement\n                 | wait_statement\n                 | block\n                 | expression_statement\n    expression_statement : expressionexpression : expression INCREMENT\n                  | expression DECREMENT\n    expression : IDENTIFIER PLUS_EQUALS expression\n                  | IDENTIFIER MINUS_EQUALS expression\n    assignment : IDENTIFIER EQUALS expressionprint_statement : PRINT LPAREN expression RPAREN\n    if_statement : IF expression block\n                 | IF expression block ELSE block\n    for_loop : FOR IDENTIFIER IN iterable blockiterable : expression\n                | RANGE LPAREN expression COMMA expression RPAREN\n    while_statement : WHILE expression blockfunction_def : DEFINE IDENTIFIER LPAREN RPAREN block\n                    | DEFINE IDENTIFIER LPAREN param_list RPAREN block\n    param_list : IDENTIFIER\n                  | param_list COMMA IDENTIFIER\n                  | empty\n    statement : IMPORT IDENTIFIERreturn_statement : RESULT expressionexpression : logic_expr\n                  | fstring\n                  | function_call\n    fstring : F_QUOTE fstring_content QUOTEfstring_content : fstring_content fstring_part\n                       | fstring_partfstring_part : STRING_CONTENT\n                    | LBRACE expression RBRACElogic_expr : logic_expr OR_OP logic_term\n                  | logic_term\n    logic_term : logic_term AND_OP equality_expr\n                  | equality_expr\n    equality_expr : equality_expr EQ relational_expr\n                     | equality_expr NEQ relational_expr\n                     | relational_expr\n    relational_expr : relational_expr LT additive_expr\n                       | relational_expr LE additive_expr\n                       | relational_expr GT additive_expr\n                       | relational_expr GE additive_expr\n                       | additive_expr\n    additive_expr : additive_expr PLUS term\n                     | additive_expr MINUS term\n                     | term\n    term : term TIMES factor\n            | term DIVIDE factor\n            | term MOD factor\n            | factor\n    factor : PLUS factor\n              | MINUS factor %prec UMINUS\n              | NOT factor\n              | primary\n    primary : atom \n               | function_callatom : IDENTIFIER\n            | NUMBER\n            | STRING\n            | TRUE\n            | FALSE\n            | LPAREN expression RPARENmember_access_chain : member_access_chain member_access\n                           | emptymember_access : DOT IDENTIFIER\n                     | DOT IDENTIFIER LPAREN arg_list RPAREN\n                     | DOT IDENTIFIER LPAREN RPARENwait_statement : WAIT expressionfunction_call : IDENTIFIER LPAREN arg_list RPAREN\n                     | IDENTIFIER LPAREN RPAREN\n                     | primary DOT IDENTIFIER LPAREN arg_list RPAREN\n                     | primary DOT IDENTIFIER LPAREN RPAREN\n    arg_list : expression\n                | arg_list COMMA expression\n                | empty\n    block : LBRACE RBRACE\n             | LBRACE statement_list RBRACEempty :'
    
_lr_action_items = {'IMPORT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,45,46,51,52,55,60,61,62,63,79,80,81,82,86,87,88,89,90,92,96,97,98,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,121,133,134,137,140,141,144,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,14,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,-15,-16,-67,-33,-78,-86,14,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-20,-22,-27,-23,-82,-28,-81,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,96,97,98,99,100,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,131,133,134,136,137,138,140,141,144,145,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,46,-67,-14,55,55,55,58,59,55,55,15,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,82,-56,82,-60,82,-2,-32,55,55,55,55,-15,-16,55,-67,-33,-78,-86,15,82,82,55,107,82,82,82,82,82,82,82,82,-61,-64,-66,-67,82,82,82,-62,-63,-19,-17,-18,-80,-72,-21,-26,123,55,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,55,-20,55,-22,-27,142,-23,55,-82,-28,-81,55,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,45,46,51,52,55,60,61,62,63,79,80,81,82,86,87,88,89,90,92,96,97,98,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,121,133,134,137,140,141,144,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,17,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,-15,-16,-67,-33,-78,-86,17,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-20,-22,-27,-23,-82,-28,-81,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,45,46,51,52,55,60,61,62,63,79,80,81,82,86,87,88,89,90,92,96,97,98,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,121,133,134,137,140,141,144,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,19,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,-15,-16,-67,-33,-78,-86,19,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-20,-22,-27,-23,-82,-28,-81,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,45,46,51,52,55,60,61,62,63,79,80,81,82,86,87,88,89,90,92,96,97,98,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,121,133,134,137,140,141,144,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,20,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,-15,-16,-67,-33,-78,-86,20,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-20,-22,-27,-23,-82,-28,-81,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,45,46,51,52,55,60,61,62,63,79,80,81,82,86,87,88,89,90,92,96,97,98,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,121,133,134,137,140,141,144,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,21,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,-15,-16,-67,-33,-78,-86,21,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-20,-22,-27,-23,-82,-28,-81,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,45,46,51,52,55,60,61,62,63,79,80,81,82,86,87,88,89,90,92,96,97,98,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,121,133,134,137,140,141,144,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,22,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,-15,-16,-67,-33,-78,-86,22,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-20,-22,-27,-23,-82,-28,-81,]),'RESULT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,45,46,51,52,55,60,61,62,63,79,80,81,82,86,87,88,89,90,92,96,97,98,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,121,133,134,137,140,141,144,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,23,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,-15,-16,-67,-33,-78,-86,23,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-20,-22,-27,-23,-82,-28,-81,]),'WAIT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,45,46,51,52,55,60,61,62,63,79,80,81,82,86,87,88,89,90,92,96,97,98,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,121,133,134,137,140,141,144,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,24,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,-15,-16,-67,-33,-78,-86,24,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-20,-22,-27,-23,-82,-28,-81,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,45,46,51,52,55,56,57,60,61,62,63,66,67,68,79,80,81,82,86,87,88,89,90,92,96,97,98,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,127,128,130,133,134,135,137,140,141,144,147,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,25,-34,-35,-36,-43,69,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,-15,-16,-67,25,25,-33,-78,-86,25,69,-39,-40,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,-87,-42,-44,-37,-38,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-20,25,25,25,-24,-41,-22,-27,25,-23,-82,-28,-81,-25,]),'F_QUOTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,45,46,47,48,49,50,51,52,53,55,60,61,62,63,69,79,80,81,82,86,87,88,89,90,92,96,97,98,100,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,131,133,134,137,138,140,141,144,145,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,30,30,30,30,30,30,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,30,30,30,30,-15,-16,30,-67,-33,-78,-86,30,30,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,30,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,30,-20,30,-22,-27,-23,30,-82,-28,-81,30,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,96,97,98,100,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,131,133,134,137,138,140,141,144,145,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,35,35,35,35,35,35,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,35,-56,35,-60,35,-2,-32,35,35,35,35,-15,-16,35,-67,-33,-78,-86,35,35,35,35,35,35,35,35,35,35,35,35,-61,-64,-66,-67,35,35,35,-62,-63,-19,-17,-18,-80,-72,-21,-26,35,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,35,-20,35,-22,-27,-23,35,-82,-28,-81,35,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,96,97,98,100,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,131,133,134,137,138,140,141,144,145,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,36,36,36,36,36,36,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,36,-56,36,-60,36,-2,-32,36,36,36,36,-15,-16,36,-67,-33,-78,-86,36,36,36,36,36,36,36,36,36,36,36,36,-61,-64,-66,-67,36,36,36,-62,-63,-19,-17,-18,-80,-72,-21,-26,36,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,36,-20,36,-22,-27,-23,36,-82,-28,-81,36,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,96,97,98,100,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,131,133,134,137,138,140,141,144,145,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,37,37,37,37,37,37,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,37,-56,37,-60,37,-2,-32,37,37,37,37,-15,-16,37,-67,-33,-78,-86,37,37,37,37,37,37,37,37,37,37,37,37,-61,-64,-66,-67,37,37,37,-62,-63,-19,-17,-18,-80,-72,-21,-26,37,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,37,-20,37,-22,-27,-23,37,-82,-28,-81,37,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,96,97,98,100,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,131,133,134,137,138,140,141,144,145,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,38,38,38,38,38,38,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,38,-56,38,-60,38,-2,-32,38,38,38,38,-15,-16,38,-67,-33,-78,-86,38,38,38,38,38,38,38,38,38,38,38,38,-61,-64,-66,-67,38,38,38,-62,-63,-19,-17,-18,-80,-72,-21,-26,38,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,38,-20,38,-22,-27,-23,38,-82,-28,-81,38,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,96,97,98,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,131,133,134,137,138,140,141,144,145,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,50,-14,53,18,18,18,18,18,18,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,18,-56,18,-60,18,-2,-32,18,18,18,18,-15,-16,18,50,99,-33,-78,-86,18,18,18,18,18,18,18,18,18,18,18,18,-61,-64,-66,50,18,18,18,-62,-63,-19,-17,-18,-80,-72,-21,-26,18,-87,-42,-44,-37,131,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,18,-20,138,18,-22,-27,-23,18,-82,-28,-81,18,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,96,97,98,100,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,131,133,134,137,138,140,141,144,145,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,40,40,40,40,40,40,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,77,40,-56,40,-60,40,-2,-32,40,40,40,40,-15,-16,40,-67,-33,-78,-86,40,40,40,40,40,40,40,40,40,40,40,40,-61,-64,-66,-67,40,40,40,-62,-63,-19,-17,-18,-80,-72,-21,-26,40,-87,-42,-44,-37,-46,-47,77,77,77,77,-54,-55,-57,-58,-59,-79,40,-20,40,-22,-27,-23,40,-82,-28,-81,40,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,96,97,98,100,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,131,133,134,137,138,140,141,144,145,],[42,42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,42,42,42,42,42,42,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,78,42,-56,42,-60,42,-2,-32,42,42,42,42,-15,-16,42,-67,-33,-78,-86,42,42,42,42,42,42,42,42,42,42,42,42,-61,-64,-66,-67,42,42,42,-62,-63,-19,-17,-18,-80,-72,-21,-26,42,-87,-42,-44,-37,-46,-47,78,78,78,78,-54,-55,-57,-58,-59,-79,42,-20,42,-22,-27,-23,42,-82,-28,-81,42,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,96,97,98,100,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,131,133,134,137,138,140,141,144,145,],[44,44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,44,44,44,44,44,44,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,44,-56,44,-60,44,-2,-32,44,44,44,44,-15,-16,44,-67,-33,-78,-86,44,44,44,44,44,44,44,44,44,44,44,44,-61,-64,-66,-67,44,44,44,-62,-63,-19,-17,-18,-80,-72,-21,-26,44,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,44,-20,44,-22,-27,-23,44,-82,-28,-81,44,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,45,46,51,52,55,60,61,62,79,80,81,82,86,87,88,89,90,92,96,97,98,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,121,133,134,137,140,141,144,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,-15,-16,-67,-33,-78,-86,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,-87,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-20,-22,-27,-23,-82,-28,-81,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,15,16,25,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,45,46,51,52,55,60,61,62,63,79,80,81,82,86,87,88,89,90,92,96,97,98,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,121,133,134,137,140,141,144,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-67,-14,62,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-2,-32,-15,-16,-67,-33,-78,-86,101,-61,-64,-66,-67,-62,-63,-19,-17,-18,-80,-72,-21,-26,-87,-42,-44,-37,130,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-20,-22,-27,-23,-82,-28,-81,]),'EQUALS':([15,],[47,]),'PLUS_EQUALS':([15,55,],[48,48,]),'MINUS_EQUALS':([15,55,],[49,49,]),'DOT':([15,28,31,33,35,36,37,38,55,80,81,82,92,96,119,140,144,],[-67,-66,70,-65,-68,-69,-70,-71,-67,70,-66,-67,-80,-72,-79,-82,-81,]),'TIMES':([15,28,31,33,35,36,37,38,41,43,55,79,80,81,82,86,87,92,96,114,115,116,117,118,119,140,144,],[-67,-66,-64,-65,-68,-69,-70,-71,83,-60,-67,-61,-64,-66,-67,-62,-63,-80,-72,83,83,-57,-58,-59,-79,-82,-81,]),'DIVIDE':([15,28,31,33,35,36,37,38,41,43,55,79,80,81,82,86,87,92,96,114,115,116,117,118,119,140,144,],[-67,-66,-64,-65,-68,-69,-70,-71,84,-60,-67,-61,-64,-66,-67,-62,-63,-80,-72,84,84,-57,-58,-59,-79,-82,-81,]),'MOD':([15,28,31,33,35,36,37,38,41,43,55,79,80,81,82,86,87,92,96,114,115,116,117,118,119,140,144,],[-67,-66,-64,-65,-68,-69,-70,-71,85,-60,-67,-61,-64,-66,-67,-62,-63,-80,-72,85,85,-57,-58,-59,-79,-82,-81,]),'LT':([15,28,31,33,34,35,36,37,38,39,41,43,55,79,80,81,82,86,87,92,96,108,109,110,111,112,113,114,115,116,117,118,119,140,144,],[-67,-66,-64,-65,73,-68,-69,-70,-71,-53,-56,-60,-67,-61,-64,-66,-67,-62,-63,-80,-72,73,73,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-82,-81,]),'LE':([15,28,31,33,34,35,36,37,38,39,41,43,55,79,80,81,82,86,87,92,96,108,109,110,111,112,113,114,115,116,117,118,119,140,144,],[-67,-66,-64,-65,74,-68,-69,-70,-71,-53,-56,-60,-67,-61,-64,-66,-67,-62,-63,-80,-72,74,74,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-82,-81,]),'GT':([15,28,31,33,34,35,36,37,38,39,41,43,55,79,80,81,82,86,87,92,96,108,109,110,111,112,113,114,115,116,117,118,119,140,144,],[-67,-66,-64,-65,75,-68,-69,-70,-71,-53,-56,-60,-67,-61,-64,-66,-67,-62,-63,-80,-72,75,75,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-82,-81,]),'GE':([15,28,31,33,34,35,36,37,38,39,41,43,55,79,80,81,82,86,87,92,96,108,109,110,111,112,113,114,115,116,117,118,119,140,144,],[-67,-66,-64,-65,76,-68,-69,-70,-71,-53,-56,-60,-67,-61,-64,-66,-67,-62,-63,-80,-72,76,76,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-82,-81,]),'EQ':([15,28,31,32,33,34,35,36,37,38,39,41,43,55,79,80,81,82,86,87,92,96,103,108,109,110,111,112,113,114,115,116,117,118,119,140,144,],[-67,-66,-64,71,-65,-48,-68,-69,-70,-71,-53,-56,-60,-67,-61,-64,-66,-67,-62,-63,-80,-72,71,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-82,-81,]),'NEQ':([15,28,31,32,33,34,35,36,37,38,39,41,43,55,79,80,81,82,86,87,92,96,103,108,109,110,111,112,113,114,115,116,117,118,119,140,144,],[-67,-66,-64,72,-65,-48,-68,-69,-70,-71,-53,-56,-60,-67,-61,-64,-66,-67,-62,-63,-80,-72,72,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-82,-81,]),'AND_OP':([15,28,29,31,32,33,34,35,36,37,38,39,41,43,55,79,80,81,82,86,87,92,96,102,103,108,109,110,111,112,113,114,115,116,117,118,119,140,144,],[-67,-66,65,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-67,-61,-64,-66,-67,-62,-63,-80,-72,65,-44,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-82,-81,]),'OR_OP':([15,26,28,29,31,32,33,34,35,36,37,38,39,41,43,55,79,80,81,82,86,87,92,96,102,103,108,109,110,111,112,113,114,115,116,117,118,119,140,144,],[-67,64,-66,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-67,-61,-64,-66,-67,-62,-63,-80,-72,-42,-44,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-82,-81,]),'INCREMENT':([15,16,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,51,52,54,55,56,57,60,61,79,80,81,82,86,87,88,89,90,92,93,95,96,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,128,132,140,143,144,146,],[-67,51,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-15,-16,51,-67,51,51,51,51,-61,-64,-66,-67,-62,-63,51,51,51,-80,51,51,-72,-42,-44,-37,51,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,51,51,-82,51,-81,51,]),'DECREMENT':([15,16,26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,51,52,54,55,56,57,60,61,79,80,81,82,86,87,88,89,90,92,93,95,96,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,128,132,140,143,144,146,],[-67,52,-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-15,-16,52,-67,52,52,52,52,-61,-64,-66,-67,-62,-63,52,52,52,-80,52,52,-72,-42,-44,-37,52,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,52,52,-82,52,-81,52,]),'RPAREN':([26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,50,51,52,54,55,79,80,81,82,86,87,89,90,91,92,93,94,95,96,99,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,123,125,126,131,132,139,140,142,144,146,],[-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,92,-15,-16,96,-67,-61,-64,-66,-67,-62,-63,-17,-18,119,-80,-83,-85,121,-72,124,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-29,135,-31,140,-84,144,-82,-30,-81,147,]),'COMMA':([26,27,28,29,31,32,33,34,35,36,37,38,39,41,43,50,51,52,55,79,80,81,82,86,87,89,90,91,92,93,94,96,99,102,103,104,108,109,110,111,112,113,114,115,116,117,118,119,123,125,126,131,132,139,140,142,143,144,],[-34,-35,-36,-43,-64,-45,-65,-48,-68,-69,-70,-71,-53,-56,-60,-88,-15,-16,-67,-61,-64,-66,-67,-62,-63,-17,-18,120,-80,-83,-85,-72,-88,-42,-44,-37,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-79,-29,136,-31,-88,-84,120,-82,-30,145,-81,]),'STRING_CONTENT':([30,66,67,68,105,130,],[68,68,-39,-40,-38,-41,]),'IN':([59,],[100,]),'ELSE':([62,97,101,],[-86,122,-87,]),'QUOTE':([66,67,68,105,130,],[104,-39,-40,-38,-41,]),'RANGE':([100,],[129,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,25,],[2,63,]),'statement':([0,2,25,63,],[3,45,3,45,]),'assignment':([0,2,25,63,],[4,4,4,4,]),'print_statement':([0,2,25,63,],[5,5,5,5,]),'if_statement':([0,2,25,63,],[6,6,6,6,]),'while_statement':([0,2,25,63,],[7,7,7,7,]),'function_def':([0,2,25,63,],[8,8,8,8,]),'for_loop':([0,2,25,63,],[9,9,9,9,]),'return_statement':([0,2,25,63,],[10,10,10,10,]),'wait_statement':([0,2,25,63,],[11,11,11,11,]),'block':([0,2,25,56,57,63,122,124,127,135,],[12,12,12,97,98,12,133,134,137,141,]),'expression_statement':([0,2,25,63,],[13,13,13,13,]),'expression':([0,2,18,19,20,23,24,25,47,48,49,50,53,63,69,100,120,131,138,145,],[16,16,54,56,57,60,61,16,88,89,90,93,95,16,106,128,132,93,143,146,]),'logic_expr':([0,2,18,19,20,23,24,25,47,48,49,50,53,63,69,100,120,131,138,145,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'fstring':([0,2,18,19,20,23,24,25,47,48,49,50,53,63,69,100,120,131,138,145,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'function_call':([0,2,18,19,20,23,24,25,40,42,44,47,48,49,50,53,63,64,65,69,71,72,73,74,75,76,77,78,83,84,85,100,120,131,138,145,],[28,28,28,28,28,28,28,28,81,81,81,28,28,28,28,28,28,81,81,28,81,81,81,81,81,81,81,81,81,81,81,28,28,28,28,28,]),'logic_term':([0,2,18,19,20,23,24,25,47,48,49,50,53,63,64,69,100,120,131,138,145,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,102,29,29,29,29,29,29,]),'primary':([0,2,18,19,20,23,24,25,40,42,44,47,48,49,50,53,63,64,65,69,71,72,73,74,75,76,77,78,83,84,85,100,120,131,138,145,],[31,31,31,31,31,31,31,31,80,80,80,31,31,31,31,31,31,80,80,31,80,80,80,80,80,80,80,80,80,80,80,31,31,31,31,31,]),'equality_expr':([0,2,18,19,20,23,24,25,47,48,49,50,53,63,64,65,69,100,120,131,138,145,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,32,32,32,32,32,32,]),'atom':([0,2,18,19,20,23,24,25,40,42,44,47,48,49,50,53,63,64,65,69,71,72,73,74,75,76,77,78,83,84,85,100,120,131,138,145,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'relational_expr':([0,2,18,19,20,23,24,25,47,48,49,50,53,63,64,65,69,71,72,100,120,131,138,145,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,108,109,34,34,34,34,34,]),'additive_expr':([0,2,18,19,20,23,24,25,47,48,49,50,53,63,64,65,69,71,72,73,74,75,76,100,120,131,138,145,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,110,111,112,113,39,39,39,39,39,]),'term':([0,2,18,19,20,23,24,25,47,48,49,50,53,63,64,65,69,71,72,73,74,75,76,77,78,100,120,131,138,145,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,114,115,41,41,41,41,41,]),'factor':([0,2,18,19,20,23,24,25,40,42,44,47,48,49,50,53,63,64,65,69,71,72,73,74,75,76,77,78,83,84,85,100,120,131,138,145,],[43,43,43,43,43,43,43,43,79,86,87,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,116,117,118,43,43,43,43,43,]),'fstring_content':([30,],[66,]),'fstring_part':([30,66,],[67,105,]),'arg_list':([50,131,],[91,139,]),'empty':([50,99,131,],[94,126,94,]),'param_list':([99,],[125,]),'iterable':([100,],[127,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','interpreter.py',293),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','interpreter.py',297),
  ('statement_list -> statement','statement_list',1,'p_statement_list','interpreter.py',298),
  ('statement -> assignment','statement',1,'p_statement','interpreter.py',306),
  ('statement -> print_statement','statement',1,'p_statement','interpreter.py',307),
  ('statement -> if_statement','statement',1,'p_statement','interpreter.py',308),
  ('statement -> while_statement','statement',1,'p_statement','interpreter.py',309),
  ('statement -> function_def','statement',1,'p_statement','interpreter.py',310),
  ('statement -> for_loop','statement',1,'p_statement','interpreter.py',311),
  ('statement -> return_statement','statement',1,'p_statement','interpreter.py',312),
  ('statement -> wait_statement','statement',1,'p_statement','interpreter.py',313),
  ('statement -> block','statement',1,'p_statement','interpreter.py',314),
  ('statement -> expression_statement','statement',1,'p_statement','interpreter.py',315),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','interpreter.py',320),
  ('expression -> expression INCREMENT','expression',2,'p_expression_increment','interpreter.py',324),
  ('expression -> expression DECREMENT','expression',2,'p_expression_increment','interpreter.py',325),
  ('expression -> IDENTIFIER PLUS_EQUALS expression','expression',3,'p_expression_compound_assignment','interpreter.py',333),
  ('expression -> IDENTIFIER MINUS_EQUALS expression','expression',3,'p_expression_compound_assignment','interpreter.py',334),
  ('assignment -> IDENTIFIER EQUALS expression','assignment',3,'p_assignment','interpreter.py',343),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','interpreter.py',347),
  ('if_statement -> IF expression block','if_statement',3,'p_if_statement','interpreter.py',352),
  ('if_statement -> IF expression block ELSE block','if_statement',5,'p_if_statement','interpreter.py',353),
  ('for_loop -> FOR IDENTIFIER IN iterable block','for_loop',5,'p_for_loop','interpreter.py',361),
  ('iterable -> expression','iterable',1,'p_iterable','interpreter.py',365),
  ('iterable -> RANGE LPAREN expression COMMA expression RPAREN','iterable',6,'p_iterable','interpreter.py',366),
  ('while_statement -> WHILE expression block','while_statement',3,'p_while_statement','interpreter.py',376),
  ('function_def -> DEFINE IDENTIFIER LPAREN RPAREN block','function_def',5,'p_function_def','interpreter.py',380),
  ('function_def -> DEFINE IDENTIFIER LPAREN param_list RPAREN block','function_def',6,'p_function_def','interpreter.py',381),
  ('param_list -> IDENTIFIER','param_list',1,'p_param_list','interpreter.py',389),
  ('param_list -> param_list COMMA IDENTIFIER','param_list',3,'p_param_list','interpreter.py',390),
  ('param_list -> empty','param_list',1,'p_param_list','interpreter.py',391),
  ('statement -> IMPORT IDENTIFIER','statement',2,'p_import_statement','interpreter.py',401),
  ('return_statement -> RESULT expression','return_statement',2,'p_return_statement','interpreter.py',405),
  ('expression -> logic_expr','expression',1,'p_expression','interpreter.py',409),
  ('expression -> fstring','expression',1,'p_expression','interpreter.py',410),
  ('expression -> function_call','expression',1,'p_expression','interpreter.py',411),
  ('fstring -> F_QUOTE fstring_content QUOTE','fstring',3,'p_fstring','interpreter.py',424),
  ('fstring_content -> fstring_content fstring_part','fstring_content',2,'p_fstring_content','interpreter.py',428),
  ('fstring_content -> fstring_part','fstring_content',1,'p_fstring_content','interpreter.py',429),
  ('fstring_part -> STRING_CONTENT','fstring_part',1,'p_fstring_part','interpreter.py',436),
  ('fstring_part -> LBRACE expression RBRACE','fstring_part',3,'p_fstring_part','interpreter.py',437),
  ('logic_expr -> logic_expr OR_OP logic_term','logic_expr',3,'p_logic_expr','interpreter.py',444),
  ('logic_expr -> logic_term','logic_expr',1,'p_logic_expr','interpreter.py',445),
  ('logic_term -> logic_term AND_OP equality_expr','logic_term',3,'p_logic_term','interpreter.py',453),
  ('logic_term -> equality_expr','logic_term',1,'p_logic_term','interpreter.py',454),
  ('equality_expr -> equality_expr EQ relational_expr','equality_expr',3,'p_equality_expr','interpreter.py',462),
  ('equality_expr -> equality_expr NEQ relational_expr','equality_expr',3,'p_equality_expr','interpreter.py',463),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr','interpreter.py',464),
  ('relational_expr -> relational_expr LT additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',472),
  ('relational_expr -> relational_expr LE additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',473),
  ('relational_expr -> relational_expr GT additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',474),
  ('relational_expr -> relational_expr GE additive_expr','relational_expr',3,'p_relational_expr','interpreter.py',475),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr','interpreter.py',476),
  ('additive_expr -> additive_expr PLUS term','additive_expr',3,'p_additive_expr','interpreter.py',484),
  ('additive_expr -> additive_expr MINUS term','additive_expr',3,'p_additive_expr','interpreter.py',485),
  ('additive_expr -> term','additive_expr',1,'p_additive_expr','interpreter.py',486),
  ('term -> term TIMES factor','term',3,'p_term','interpreter.py',494),
  ('term -> term DIVIDE factor','term',3,'p_term','interpreter.py',495),
  ('term -> term MOD factor','term',3,'p_term','interpreter.py',496),
  ('term -> factor','term',1,'p_term','interpreter.py',497),
  ('factor -> PLUS factor','factor',2,'p_factor','interpreter.py',505),
  ('factor -> MINUS factor','factor',2,'p_factor','interpreter.py',506),
  ('factor -> NOT factor','factor',2,'p_factor','interpreter.py',507),
  ('factor -> primary','factor',1,'p_factor','interpreter.py',508),
  ('primary -> atom','primary',1,'p_primary','interpreter.py',516),
  ('primary -> function_call','primary',1,'p_primary','interpreter.py',517),
  ('atom -> IDENTIFIER','atom',1,'p_atom','interpreter.py',525),
  ('atom -> NUMBER','atom',1,'p_atom','interpreter.py',526),
  ('atom -> STRING','atom',1,'p_atom','interpreter.py',527),
  ('atom -> TRUE','atom',1,'p_atom','interpreter.py',528),
  ('atom -> FALSE','atom',1,'p_atom','interpreter.py',529),
  ('atom -> LPAREN expression RPAREN','atom',3,'p_atom','interpreter.py',530),
  ('member_access_chain -> member_access_chain member_access','member_access_chain',2,'p_member_access_chain','interpreter.py',546),
  ('member_access_chain -> empty','member_access_chain',1,'p_member_access_chain','interpreter.py',547),
  ('member_access -> DOT IDENTIFIER','member_access',2,'p_member_access','interpreter.py',554),
  ('member_access -> DOT IDENTIFIER LPAREN arg_list RPAREN','member_access',5,'p_member_access','interpreter.py',555),
  ('member_access -> DOT IDENTIFIER LPAREN RPAREN','member_access',4,'p_member_access','interpreter.py',556),
  ('wait_statement -> WAIT expression','wait_statement',2,'p_wait_statement','interpreter.py',570),
  ('function_call -> IDENTIFIER LPAREN arg_list RPAREN','function_call',4,'p_function_call','interpreter.py',574),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','interpreter.py',575),
  ('function_call -> primary DOT IDENTIFIER LPAREN arg_list RPAREN','function_call',6,'p_function_call','interpreter.py',576),
  ('function_call -> primary DOT IDENTIFIER LPAREN RPAREN','function_call',5,'p_function_call','interpreter.py',577),
  ('arg_list -> expression','arg_list',1,'p_arg_list','interpreter.py',599),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','interpreter.py',600),
  ('arg_list -> empty','arg_list',1,'p_arg_list','interpreter.py',601),
  ('block -> LBRACE RBRACE','block',2,'p_block','interpreter.py',611),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','interpreter.py',612),
  ('empty -> <empty>','empty',0,'p_empty','interpreter.py',619),
]
